#include "Logic.h" 
#define LOGIC_EXP_NUM  94 
#define LOGIC_NODE_NUM 250 
//通用文件头-------------------------
//文件长度，数据库版本号，操作表示，修改掩码，修改时间,文件头校验; 默认逻辑没有形成文件，前两项无效
TCommonFileHead  CommonFile_Head={
 0x0DE8, 0x65701361,  0, {2013,7,20,16,43,38,7,0}, 0xA6B0 //
};
//逻辑文件头-------------------------
//文件标识，长度， 继电器个数， 表达式个数，节点个数; 默认逻辑没有形成文件，前两项无效
kTLogicPara_Head  Logic_Head={
 "PLC3001", 3560, 808, 94, 250 //
};
//表达式描述---------------------------
//输出序号, 输出执行类型, 参数, 参数2, 起始节点序号，节点个数,扩展参数1，扩展参数2
kTLogicPara_Expression Logic_Expression[LOGIC_EXP_NUM] = {
{55, 0, 0, 0, 0, 2, 128,128}, // 表达式0 M6=!IN12*IN5  
{56, 0, 0, 0, 2, 2, 128,128}, // 表达式1 M7=IN7+IN28  
{57, 0, 0, 0, 4, 2, 128,128}, // 表达式2 M8=!M6*!M7
{456, 0, 0, 0, 6, 2, 128,128}, // 表达式3 OUT3=RCE1+TO1       
{457, 0, 0, 0, 8, 2, 128,128}, // 表达式4 OUT4=RCE2+TO2
{455, 0, 0, 0, 10, 4, 128,128}, // 表达式5 OUT2=OUT3+OUT4+RCP1+RCP2
{704, 0, 0, 0, 14, 1, 128,128}, // 表达式6 RCV1=IN70
{705, 0, 0, 0, 15, 1, 128,128}, // 表达式7 RCV2=IN70
{459, 0, 0, 0, 16, 2, 128,128}, // 表达式8 OUT6=RCE3+TO3
{460, 0, 0, 0, 18, 2, 128,128}, // 表达式9 OUT7=RCE4+TO4
{458, 0, 0, 0, 20, 4, 128,128}, // 表达式10 OUT5=OUT6+OUT7+RCP3+RCP4
{706, 0, 0, 0, 24, 1, 128,128}, // 表达式11 RCV3=IN71
{707, 0, 0, 0, 25, 1, 128,128}, // 表达式12 RCV4=IN71
{462, 0, 0, 0, 26, 2, 128,128}, // 表达式13 OUT9=RCE5+TO5
{463, 0, 0, 0, 28, 2, 128,128}, // 表达式14 OUT10=RCE6+TO6
{461, 0, 0, 0, 30, 4, 128,128}, // 表达式15 OUT8=OUT9+OUT10+RCP5+RCP6
{708, 0, 0, 0, 34, 1, 128,128}, // 表达式16 RCV5=IN72
{709, 0, 0, 0, 35, 1, 128,128}, // 表达式17 RCV6=IN72
{465, 0, 0, 0, 36, 3, 128,128}, // 表达式18 OUT12=RCE7+TO7+!M8
{466, 0, 0, 0, 39, 2, 128,128}, // 表达式19 OUT13=RCE8+TO8
{464, 0, 0, 0, 41, 4, 128,128}, // 表达式20 OUT11=OUT12+OUT13+RCP7+RCP8
{710, 0, 0, 0, 45, 1, 128,128}, // 表达式21 RCV7=IN73
{711, 0, 0, 0, 46, 1, 128,128}, // 表达式22 RCV8=IN73
{468, 0, 0, 0, 47, 2, 128,128}, // 表达式23 OUT15=RCE9+TO9
{469, 0, 0, 0, 49, 2, 128,128}, // 表达式24 OUT16=RCE10+TO10
{467, 0, 0, 0, 51, 4, 128,128}, // 表达式25 OUT14=OUT15+OUT16+RCP9+RCP10
{712, 0, 0, 0, 55, 1, 128,128}, // 表达式26 RCV9=IN74
{713, 0, 0, 0, 56, 1, 128,128}, // 表达式27 RCV10=IN74
{471, 0, 0, 0, 57, 2, 128,128}, // 表达式28 OUT18=RCE11+TO11
{472, 0, 0, 0, 59, 2, 128,128}, // 表达式29 OUT19=RCE12+TO12
{470, 0, 0, 0, 61, 4, 128,128}, // 表达式30 OUT17=OUT18+OUT19+RCP11+RCP12
{714, 0, 0, 0, 65, 1, 128,128}, // 表达式31 RCV11=IN75
{715, 0, 0, 0, 66, 1, 128,128}, // 表达式32 RCV12=IN75
{474, 0, 0, 0, 67, 2, 128,128}, // 表达式33 OUT21=RCE13+TO13
{475, 0, 0, 0, 69, 2, 128,128}, // 表达式34 OUT22=RCE14+TO14
{476, 0, 0, 0, 71, 2, 128,128}, // 表达式35 OUT23=RCE15+TO15
{477, 0, 0, 0, 73, 2, 128,128}, // 表达式36 OUT24=RCE16+TO16
{473, 0, 0, 0, 75, 8, 128,128}, // 表达式37 OUT20=OUT21+OUT22+OUT23+OUT24+RCP13+RCP14+RCP15+RCP16
{716, 0, 0, 0, 83, 1, 128,128}, // 表达式38 RCV13=IN76
{717, 0, 0, 0, 84, 1, 128,128}, // 表达式39 RCV14=IN76
{718, 0, 0, 0, 85, 1, 128,128}, // 表达式40 RCV15=IN76
{719, 0, 0, 0, 86, 1, 128,128}, // 表达式41 RCV16=IN76
{177, 0, 0, 0, 87, 14, 128,128}, // 表达式42 M128=OUT2+OUT3+OUT4+OUT5+OUT6+OUT7+OUT8+OUT9+OUT10+OUT11+OUT12+OUT13+OUT14+OUT15
{454, 0, 0, 0, 101, 10, 128,128}, // 表达式43 OUT1=M128+OUT16+OUT17+OUT18+OUT19+OUT20+OUT21+OUT22+OUT23+OUT24
{480, 0, 0, 0, 111, 2, 128,128}, // 表达式44 OUT27=RCE17+TO17
{481, 0, 0, 0, 113, 2, 128,128}, // 表达式45 OUT28=RCE18+TO18
{479, 0, 0, 0, 115, 4, 128,128}, // 表达式46 OUT26=OUT27+OUT28+RCP17+RCP18
{720, 0, 0, 0, 119, 1, 128,128}, // 表达式47 RCV17=IN77
{721, 0, 0, 0, 120, 1, 128,128}, // 表达式48 RCV18=IN77
{483, 0, 0, 0, 121, 2, 128,128}, // 表达式49 OUT30=RCE19+TO19
{484, 0, 0, 0, 123, 2, 128,128}, // 表达式50 OUT31=RCE20+TO20
{482, 0, 0, 0, 125, 4, 128,128}, // 表达式51 OUT29=OUT30+OUT31+RCP19+RCP20
{722, 0, 0, 0, 129, 1, 128,128}, // 表达式52 RCV19=IN78
{723, 0, 0, 0, 130, 1, 128,128}, // 表达式53 RCV20=IN78
{486, 0, 0, 0, 131, 2, 128,128}, // 表达式54 OUT33=RCE21+TO21
{487, 0, 0, 0, 133, 2, 128,128}, // 表达式55 OUT34=RCE22+TO22
{485, 0, 0, 0, 135, 4, 128,128}, // 表达式56 OUT32=OUT33+OUT34+RCP21+RCP22
{724, 0, 0, 0, 139, 1, 128,128}, // 表达式57 RCV21=IN79
{725, 0, 0, 0, 140, 1, 128,128}, // 表达式58 RCV22=IN79
{489, 0, 0, 0, 141, 2, 128,128}, // 表达式59 OUT36=RCE23+TO23
{490, 0, 0, 0, 143, 2, 128,128}, // 表达式60 OUT37=RCE24+TO24
{488, 0, 0, 0, 145, 4, 128,128}, // 表达式61 OUT35=OUT36+OUT37+RCP23+RCP24
{726, 0, 0, 0, 149, 1, 128,128}, // 表达式62 RCV23=IN80
{727, 0, 0, 0, 150, 1, 128,128}, // 表达式63 RCV24=IN80
{492, 0, 0, 0, 151, 2, 128,128}, // 表达式64 OUT39=RCE25+TO25
{493, 0, 0, 0, 153, 2, 128,128}, // 表达式65 OUT40=RCE26+TO26
{491, 0, 0, 0, 155, 4, 128,128}, // 表达式66 OUT38=OUT39+OUT40+RCP25+RCP26
{728, 0, 0, 0, 159, 1, 128,128}, // 表达式67 RCV25=IN81
{729, 0, 0, 0, 160, 1, 128,128}, // 表达式68 RCV26=IN81
{495, 0, 0, 0, 161, 2, 128,128}, // 表达式69 OUT42=RCE27+TO27
{496, 0, 0, 0, 163, 2, 128,128}, // 表达式70 OUT43=RCE28+TO28
{494, 0, 0, 0, 165, 4, 128,128}, // 表达式71 OUT41=OUT42+OUT43+RCP27+RCP28
{730, 0, 0, 0, 169, 1, 128,128}, // 表达式72 RCV27=IN82
{731, 0, 0, 0, 170, 1, 128,128}, // 表达式73 RCV28=IN82
{498, 0, 0, 0, 171, 2, 128,128}, // 表达式74 OUT45=RCE29+TO29
{499, 0, 0, 0, 173, 2, 128,128}, // 表达式75 OUT46=RCE30+TO30
{500, 0, 0, 0, 175, 2, 128,128}, // 表达式76 OUT47=RCE31+TO31
{501, 0, 0, 0, 177, 2, 128,128}, // 表达式77 OUT48=RCE32+TO32
{497, 0, 0, 0, 179, 8, 128,128}, // 表达式78 OUT44=OUT45+OUT46+OUT47+OUT48+RCP29+RCP30+RCP31+RCP32
{732, 0, 0, 0, 187, 1, 128,128}, // 表达式79 RCV29=IN83
{733, 0, 0, 0, 188, 1, 128,128}, // 表达式80 RCV30=IN83
{734, 0, 0, 0, 189, 1, 128,128}, // 表达式81 RCV31=IN83
{735, 0, 0, 0, 190, 1, 128,128}, // 表达式82 RCV32=IN83
{176, 0, 0, 0, 191, 14, 128,128}, // 表达式83 M127=OUT26+OUT27+OUT28+OUT29+OUT30+OUT31+OUT32+OUT33+OUT34+OUT35+OUT36+OUT37+OUT38+OUT39
{478, 0, 0, 0, 205, 10, 128,128}, // 表达式84 OUT25=M127+OUT40+OUT41+OUT42+OUT43+OUT44+OUT45+OUT46+OUT47+OUT48
{513, 5, 50, 0, 215, 1, 129,128}, // 表达式85 PW2[50]=MAINTLINK
{512, 5, 500, 0, 216, 13, 129,128}, // 表达式86 PW1[500]=!ET11ERR+!ET12ERR+!ET13ERR+!ET14ERR+!ET15ERR+!ET21ERR+!ET22ERR+!ET23ERR+!ET24ERR+!ET25ERR+!COM1ERR+!CAN1ERR+!CAN2ERR
{568, 0, 0, 0, 229, 2, 128,128}, // 表达式87 LED1G=PW1*!MAINTLINK
{569, 0, 0, 0, 231, 14, 128,128}, // 表达式88 LED1R=ET11ERR*ET12ERR*ET13ERR*ET14ERR*ET15ERR*ET21ERR*ET22ERR*ET23ERR*ET24ERR*ET25ERR*COM1ERR*CAN1ERR*CAN2ERR+PW2
{50, 0, 0, 0, 245, 1, 128,128}, // 表达式89 M1=GEAR1
{51, 0, 0, 0, 246, 1, 128,128}, // 表达式90 M2=GEAR2
{52, 0, 0, 0, 247, 1, 128,128}, // 表达式91 M3=GEAR4
{53, 0, 0, 0, 248, 1, 128,128}, // 表达式92 M4=GEAR8
{54, 0, 0, 0, 249, 1, 128,128}, // 表达式93 M5=GEAR10
};

//节点描述表---------------------------
//继电器序号,跳转偏移,运算方式,提取方式
kTLogicPara_CalcNode Logic_Node[LOGIC_NODE_NUM] = {
{366, 65535, 11, 1},    // 节点0 
{359, 0, 20, 0},    // 节点1 
{361, 65535, 10, 0},    // 节点2 
{382, 0, 20, 0},    // 节点3 
{55, 65535, 11, 1},    // 节点4 
{56, 0, 20, 1},    // 节点5 
{656, 65535, 10, 0},    // 节点6 
{528, 0, 20, 0},    // 节点7 
{657, 65535, 10, 0},    // 节点8 
{529, 0, 20, 0},    // 节点9 
{456, 65535, 10, 0},    // 节点10 
{457, 65535, 10, 0},    // 节点11 
{608, 65535, 10, 0},    // 节点12 
{609, 0, 20, 0},    // 节点13 
{424, 0, 20, 0},    // 节点14 
{424, 0, 20, 0},    // 节点15 
{658, 65535, 10, 0},    // 节点16 
{530, 0, 20, 0},    // 节点17 
{659, 65535, 10, 0},    // 节点18 
{531, 0, 20, 0},    // 节点19 
{459, 65535, 10, 0},    // 节点20 
{460, 65535, 10, 0},    // 节点21 
{610, 65535, 10, 0},    // 节点22 
{611, 0, 20, 0},    // 节点23 
{425, 0, 20, 0},    // 节点24 
{425, 0, 20, 0},    // 节点25 
{660, 65535, 10, 0},    // 节点26 
{532, 0, 20, 0},    // 节点27 
{661, 65535, 10, 0},    // 节点28 
{533, 0, 20, 0},    // 节点29 
{462, 65535, 10, 0},    // 节点30 
{463, 65535, 10, 0},    // 节点31 
{612, 65535, 10, 0},    // 节点32 
{613, 0, 20, 0},    // 节点33 
{426, 0, 20, 0},    // 节点34 
{426, 0, 20, 0},    // 节点35 
{662, 65535, 10, 0},    // 节点36 
{534, 65535, 10, 0},    // 节点37 
{57, 0, 20, 1},    // 节点38 
{663, 65535, 10, 0},    // 节点39 
{535, 0, 20, 0},    // 节点40 
{465, 65535, 10, 0},    // 节点41 
{466, 65535, 10, 0},    // 节点42 
{614, 65535, 10, 0},    // 节点43 
{615, 0, 20, 0},    // 节点44 
{427, 0, 20, 0},    // 节点45 
{427, 0, 20, 0},    // 节点46 
{664, 65535, 10, 0},    // 节点47 
{536, 0, 20, 0},    // 节点48 
{665, 65535, 10, 0},    // 节点49 
{537, 0, 20, 0},    // 节点50 
{468, 65535, 10, 0},    // 节点51 
{469, 65535, 10, 0},    // 节点52 
{616, 65535, 10, 0},    // 节点53 
{617, 0, 20, 0},    // 节点54 
{428, 0, 20, 0},    // 节点55 
{428, 0, 20, 0},    // 节点56 
{666, 65535, 10, 0},    // 节点57 
{538, 0, 20, 0},    // 节点58 
{667, 65535, 10, 0},    // 节点59 
{539, 0, 20, 0},    // 节点60 
{471, 65535, 10, 0},    // 节点61 
{472, 65535, 10, 0},    // 节点62 
{618, 65535, 10, 0},    // 节点63 
{619, 0, 20, 0},    // 节点64 
{429, 0, 20, 0},    // 节点65 
{429, 0, 20, 0},    // 节点66 
{668, 65535, 10, 0},    // 节点67 
{540, 0, 20, 0},    // 节点68 
{669, 65535, 10, 0},    // 节点69 
{541, 0, 20, 0},    // 节点70 
{670, 65535, 10, 0},    // 节点71 
{542, 0, 20, 0},    // 节点72 
{671, 65535, 10, 0},    // 节点73 
{543, 0, 20, 0},    // 节点74 
{474, 65535, 10, 0},    // 节点75 
{475, 65535, 10, 0},    // 节点76 
{476, 65535, 10, 0},    // 节点77 
{477, 65535, 10, 0},    // 节点78 
{620, 65535, 10, 0},    // 节点79 
{621, 65535, 10, 0},    // 节点80 
{622, 65535, 10, 0},    // 节点81 
{623, 0, 20, 0},    // 节点82 
{430, 0, 20, 0},    // 节点83 
{430, 0, 20, 0},    // 节点84 
{430, 0, 20, 0},    // 节点85 
{430, 0, 20, 0},    // 节点86 
{455, 65535, 10, 0},    // 节点87 
{456, 65535, 10, 0},    // 节点88 
{457, 65535, 10, 0},    // 节点89 
{458, 65535, 10, 0},    // 节点90 
{459, 65535, 10, 0},    // 节点91 
{460, 65535, 10, 0},    // 节点92 
{461, 65535, 10, 0},    // 节点93 
{462, 65535, 10, 0},    // 节点94 
{463, 65535, 10, 0},    // 节点95 
{464, 65535, 10, 0},    // 节点96 
{465, 65535, 10, 0},    // 节点97 
{466, 65535, 10, 0},    // 节点98 
{467, 65535, 10, 0},    // 节点99 
{468, 0, 20, 0},    // 节点100 
{177, 65535, 10, 0},    // 节点101 
{469, 65535, 10, 0},    // 节点102 
{470, 65535, 10, 0},    // 节点103 
{471, 65535, 10, 0},    // 节点104 
{472, 65535, 10, 0},    // 节点105 
{473, 65535, 10, 0},    // 节点106 
{474, 65535, 10, 0},    // 节点107 
{475, 65535, 10, 0},    // 节点108 
{476, 65535, 10, 0},    // 节点109 
{477, 0, 20, 0},    // 节点110 
{672, 65535, 10, 0},    // 节点111 
{544, 0, 20, 0},    // 节点112 
{673, 65535, 10, 0},    // 节点113 
{545, 0, 20, 0},    // 节点114 
{480, 65535, 10, 0},    // 节点115 
{481, 65535, 10, 0},    // 节点116 
{624, 65535, 10, 0},    // 节点117 
{625, 0, 20, 0},    // 节点118 
{431, 0, 20, 0},    // 节点119 
{431, 0, 20, 0},    // 节点120 
{674, 65535, 10, 0},    // 节点121 
{546, 0, 20, 0},    // 节点122 
{675, 65535, 10, 0},    // 节点123 
{547, 0, 20, 0},    // 节点124 
{483, 65535, 10, 0},    // 节点125 
{484, 65535, 10, 0},    // 节点126 
{626, 65535, 10, 0},    // 节点127 
{627, 0, 20, 0},    // 节点128 
{432, 0, 20, 0},    // 节点129 
{432, 0, 20, 0},    // 节点130 
{676, 65535, 10, 0},    // 节点131 
{548, 0, 20, 0},    // 节点132 
{677, 65535, 10, 0},    // 节点133 
{549, 0, 20, 0},    // 节点134 
{486, 65535, 10, 0},    // 节点135 
{487, 65535, 10, 0},    // 节点136 
{628, 65535, 10, 0},    // 节点137 
{629, 0, 20, 0},    // 节点138 
{433, 0, 20, 0},    // 节点139 
{433, 0, 20, 0},    // 节点140 
{678, 65535, 10, 0},    // 节点141 
{550, 0, 20, 0},    // 节点142 
{679, 65535, 10, 0},    // 节点143 
{551, 0, 20, 0},    // 节点144 
{489, 65535, 10, 0},    // 节点145 
{490, 65535, 10, 0},    // 节点146 
{630, 65535, 10, 0},    // 节点147 
{631, 0, 20, 0},    // 节点148 
{434, 0, 20, 0},    // 节点149 
{434, 0, 20, 0},    // 节点150 
{680, 65535, 10, 0},    // 节点151 
{552, 0, 20, 0},    // 节点152 
{681, 65535, 10, 0},    // 节点153 
{553, 0, 20, 0},    // 节点154 
{492, 65535, 10, 0},    // 节点155 
{493, 65535, 10, 0},    // 节点156 
{632, 65535, 10, 0},    // 节点157 
{633, 0, 20, 0},    // 节点158 
{435, 0, 20, 0},    // 节点159 
{435, 0, 20, 0},    // 节点160 
{682, 65535, 10, 0},    // 节点161 
{554, 0, 20, 0},    // 节点162 
{683, 65535, 10, 0},    // 节点163 
{555, 0, 20, 0},    // 节点164 
{495, 65535, 10, 0},    // 节点165 
{496, 65535, 10, 0},    // 节点166 
{634, 65535, 10, 0},    // 节点167 
{635, 0, 20, 0},    // 节点168 
{436, 0, 20, 0},    // 节点169 
{436, 0, 20, 0},    // 节点170 
{684, 65535, 10, 0},    // 节点171 
{556, 0, 20, 0},    // 节点172 
{685, 65535, 10, 0},    // 节点173 
{557, 0, 20, 0},    // 节点174 
{686, 65535, 10, 0},    // 节点175 
{558, 0, 20, 0},    // 节点176 
{687, 65535, 10, 0},    // 节点177 
{559, 0, 20, 0},    // 节点178 
{498, 65535, 10, 0},    // 节点179 
{499, 65535, 10, 0},    // 节点180 
{500, 65535, 10, 0},    // 节点181 
{501, 65535, 10, 0},    // 节点182 
{636, 65535, 10, 0},    // 节点183 
{637, 65535, 10, 0},    // 节点184 
{638, 65535, 10, 0},    // 节点185 
{639, 0, 20, 0},    // 节点186 
{437, 0, 20, 0},    // 节点187 
{437, 0, 20, 0},    // 节点188 
{437, 0, 20, 0},    // 节点189 
{437, 0, 20, 0},    // 节点190 
{479, 65535, 10, 0},    // 节点191 
{480, 65535, 10, 0},    // 节点192 
{481, 65535, 10, 0},    // 节点193 
{482, 65535, 10, 0},    // 节点194 
{483, 65535, 10, 0},    // 节点195 
{484, 65535, 10, 0},    // 节点196 
{485, 65535, 10, 0},    // 节点197 
{486, 65535, 10, 0},    // 节点198 
{487, 65535, 10, 0},    // 节点199 
{488, 65535, 10, 0},    // 节点200 
{489, 65535, 10, 0},    // 节点201 
{490, 65535, 10, 0},    // 节点202 
{491, 65535, 10, 0},    // 节点203 
{492, 0, 20, 0},    // 节点204 
{176, 65535, 10, 0},    // 节点205 
{493, 65535, 10, 0},    // 节点206 
{494, 65535, 10, 0},    // 节点207 
{495, 65535, 10, 0},    // 节点208 
{496, 65535, 10, 0},    // 节点209 
{497, 65535, 10, 0},    // 节点210 
{498, 65535, 10, 0},    // 节点211 
{499, 65535, 10, 0},    // 节点212 
{500, 65535, 10, 0},    // 节点213 
{501, 0, 20, 0},    // 节点214 
{48, 0, 20, 0},    // 节点215 
{32, 65535, 10, 1},    // 节点216 
{33, 65535, 10, 1},    // 节点217 
{34, 65535, 10, 1},    // 节点218 
{35, 65535, 10, 1},    // 节点219 
{36, 65535, 10, 1},    // 节点220 
{37, 65535, 10, 1},    // 节点221 
{38, 65535, 10, 1},    // 节点222 
{39, 65535, 10, 1},    // 节点223 
{40, 65535, 10, 1},    // 节点224 
{41, 65535, 10, 1},    // 节点225 
{42, 65535, 10, 1},    // 节点226 
{43, 65535, 10, 1},    // 节点227 
{44, 0, 20, 1},    // 节点228 
{512, 65535, 11, 0},    // 节点229 
{48, 0, 20, 1},    // 节点230 
{32, 13, 11, 0},    // 节点231 
{33, 12, 11, 0},    // 节点232 
{34, 11, 11, 0},    // 节点233 
{35, 10, 11, 0},    // 节点234 
{36, 9, 11, 0},    // 节点235 
{37, 8, 11, 0},    // 节点236 
{38, 7, 11, 0},    // 节点237 
{39, 6, 11, 0},    // 节点238 
{40, 5, 11, 0},    // 节点239 
{41, 4, 11, 0},    // 节点240 
{42, 3, 11, 0},    // 节点241 
{43, 2, 11, 0},    // 节点242 
{44, 65535, 10, 0},    // 节点243 
{513, 0, 20, 0},    // 节点244 
{375, 0, 20, 0},    // 节点245 
{376, 0, 20, 0},    // 节点246 
{377, 0, 20, 0},    // 节点247 
{378, 0, 20, 0},    // 节点248 
{379, 0, 20, 0},    // 节点249 
};

WORD wChksumCpp = 0x1e6b;

//@;*********************************************************
//@;*Name:	       杭州地铁KF6570可编程逻辑    	*
//@;*By:          yanzh						*
//@;*Date:		   2013年5月28日 16:21:13		*
//@;*DATEBASEVER: E100							*
//@;*CRC:										*
//@;*CHANGE By:								*
//@;*CHANGE Date:								*
//@;
//@;*********************************************************
//@
//@#define GEAR1  IN21 ;档位1
//@#define GEAR2  IN22 ;档位2
//@#define GEAR4  IN23 ;档位4
//@#define GEAR8  IN24 ;档位8
//@#define GEAR10 IN25 ;档位10
//@
//@
//@
//@;断路器合闸闭锁逻辑
//@M6=!IN12*IN5  ;IN12,电缆侧无压;IN5,接地开关处于合位
//@M7=IN7+IN28	  ;IN7,断路器未储能;IN28,控制回路断线
//@M8=!M6*!M7
//@
//@;*************系统出口定义部分***********************************************************
//@OUT3=RCE1+TO1       ;出口板1遥控1分
//@OUT4=RCE2+TO2		;出口板1遥控1合
//@OUT2=OUT3+OUT4+RCP1+RCP2
//@RCV1=IN70
//@RCV2=IN70
//@
//@OUT6=RCE3+TO3		;出口板1遥控2分
//@OUT7=RCE4+TO4		;出口板1遥控2合
//@OUT5=OUT6+OUT7+RCP3+RCP4
//@RCV3=IN71
//@RCV4=IN71
//@
//@OUT9=RCE5+TO5		;出口板1遥控3分
//@OUT10=RCE6+TO6		;出口板1遥控3合
//@OUT8=OUT9+OUT10+RCP5+RCP6
//@RCV5=IN72
//@RCV6=IN72
//@
//@OUT12=RCE7+TO7+!M8		;出口板1遥控4分
//@OUT13=RCE8+TO8		;出口板1遥控4合
//@OUT11=OUT12+OUT13+RCP7+RCP8
//@RCV7=IN73
//@RCV8=IN73
//@
//@
//@OUT15=RCE9+TO9			;出口板1遥控5分
//@OUT16=RCE10+TO10		;出口板1遥控5合
//@OUT14=OUT15+OUT16+RCP9+RCP10
//@RCV9=IN74
//@RCV10=IN74
//@
//@OUT18=RCE11+TO11		;出口板1遥控6分
//@OUT19=RCE12+TO12			;出口板1遥控6合
//@OUT17=OUT18+OUT19+RCP11+RCP12
//@RCV11=IN75
//@RCV12=IN75
//@
//@OUT21=RCE13+TO13			;出口板1遥控7分
//@OUT22=RCE14+TO14			;出口板1遥控7合
//@OUT23=RCE15+TO15			;出口板1遥控8分
//@OUT24=RCE16+TO16			;出口板1遥控8合
//@OUT20=OUT21+OUT22+OUT23+OUT24+RCP13+RCP14+RCP15+RCP16
//@RCV13=IN76
//@RCV14=IN76
//@RCV15=IN76
//@RCV16=IN76
//@
//@M128=OUT2+OUT3+OUT4+OUT5+OUT6+OUT7+OUT8+OUT9+OUT10+OUT11+OUT12+OUT13+OUT14+OUT15
//@OUT1=M128+OUT16+OUT17+OUT18+OUT19+OUT20+OUT21+OUT22+OUT23+OUT24
//@
//@OUT27=RCE17+TO17				;出口板2遥控1分
//@OUT28=RCE18+TO18				;出口板2遥控1合
//@OUT26=OUT27+OUT28+RCP17+RCP18
//@RCV17=IN77
//@RCV18=IN77
//@	
//@OUT30=RCE19+TO19				;出口板2遥控2分
//@OUT31=RCE20+TO20				;;出口板2遥控2合
//@OUT29=OUT30+OUT31+RCP19+RCP20
//@RCV19=IN78
//@RCV20=IN78
//@
//@OUT33=RCE21+TO21				;出口板2遥控3分
//@OUT34=RCE22+TO22				;出口板2遥控3合
//@OUT32=OUT33+OUT34+RCP21+RCP22
//@RCV21=IN79
//@RCV22=IN79
//@
//@OUT36=RCE23+TO23					;出口板2遥控4分
//@OUT37=RCE24+TO24					;出口板2遥控4合
//@OUT35=OUT36+OUT37+RCP23+RCP24
//@RCV23=IN80
//@RCV24=IN80
//@
//@OUT39=RCE25+TO25				;出口板2遥控5分
//@OUT40=RCE26+TO26				;出口板2遥控5合
//@OUT38=OUT39+OUT40+RCP25+RCP26
//@RCV25=IN81
//@RCV26=IN81
//@
//@OUT42=RCE27+TO27				;出口板2遥控6分
//@OUT43=RCE28+TO28				;出口板2遥控6合
//@OUT41=OUT42+OUT43+RCP27+RCP28
//@RCV27=IN82
//@RCV28=IN82
//@
//@OUT45=RCE29+TO29				;出口板2遥控7分
//@OUT46=RCE30+TO30				;出口板2遥控7合
//@OUT47=RCE31+TO31				;出口板2遥控8分
//@OUT48=RCE32+TO32					;出口板2遥控8合
//@OUT44=OUT45+OUT46+OUT47+OUT48+RCP29+RCP30+RCP31+RCP32
//@RCV29=IN83
//@RCV30=IN83
//@RCV31=IN83
//@RCV32=IN83
//@
//@
//@M127=OUT26+OUT27+OUT28+OUT29+OUT30+OUT31+OUT32+OUT33+OUT34+OUT35+OUT36+OUT37+OUT38+OUT39
//@OUT25=M127+OUT40+OUT41+OUT42+OUT43+OUT44+OUT45+OUT46+OUT47+OUT48
//@
//@;*****面板灯定义********************************************************
//@PW2[50]=MAINTLINK
//@PW1[500]=!ET11ERR+!ET12ERR+!ET13ERR+!ET14ERR+!ET15ERR+!ET21ERR+!ET22ERR+!ET23ERR+!ET24ERR+!ET25ERR+!COM1ERR+!CAN1ERR+!CAN2ERR
//@LED1G=PW1*!MAINTLINK
//@LED1R=ET11ERR*ET12ERR*ET13ERR*ET14ERR*ET15ERR*ET21ERR*ET22ERR*ET23ERR*ET24ERR*ET25ERR*COM1ERR*CAN1ERR*CAN2ERR+PW2
//@
//@
//@;有载调压档位相关，若开入位置修改，只需修改宏定义即可，M1~M5不可修改，且不可用于它处
//@M1=GEAR1
//@M2=GEAR2
//@M3=GEAR4
//@M4=GEAR8
//@M5=GEAR10
//@
//@
//@;REC=/IN40
//@
//@
//@
//@
//@
//@
//@
//@
//@
//@
//@
//@