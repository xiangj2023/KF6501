#ifndef _OSVXWORKS_H
#define _OSVXWORKS_H

#if(OS_PLATFORM == OS_VXWORKS)

#include "system.h"

//信号量等待方式定义
#define SEM_SUPEND		0xffffffff	//信号量悬挂等待方式
#define SEM_NOWAIT		0			//信号量直接返回方式


//毫秒到系统tick的转换
#define MS2TICK(value)          ((value+1000/SYS_CLK_RATE-1)/(1000/SYS_CLK_RATE))

/*----------------------------------------------------------------------------------------*/
/* 定时器对应的起始事件位                                                                 */
/*----------------------------------------------------------------------------------------*/
#define EV_TIMERSTART   (1<<8)
/*----------------------------------------------------------------------------------------*/
/* 定时器对应的结束事件位                                                                 */
/*----------------------------------------------------------------------------------------*/
#define EV_TIMERSTOP    (1<<15)
#define EV_TIMERMASK	0x0000ff00

/*----------------------------------------------------------------------------------------*/
/* 事件消息宏掩码                                                                         */
/*----------------------------------------------------------------------------------------*/
#define EV_EVENTMAPMASK         (EV_RELAYBIT|EV_RELAYTIMEBIT)	//(0x0f)
#define EV_EVENTSTART			(0x01)

//保护采样中断事件定义
#define EV_RELAYBIT		(1<<0)
#define EV_RELAYMASK	0x00000001	

//定义保护定时中断事件定义
#define EV_RELAYTIMEBIT		(1<<1)
#define EV_RELAYTIMEMASK	(0x00000002)


/*----------------------------------------------------------------------------------------*/
/* 异步队列消息掩码                                                                       */
/*----------------------------------------------------------------------------------------*/
#define EV_DBNOTIFY             (1<<6)
#define EV_MASKALL              0x0000ffff
#define EV_MSGMASK				0x000000ff

/*------------------------------------------------------------------------------------------*/
/* 功能: 操作系统初始化                                                                         */
/*------------------------------------------------------------------------------------------*/
void VXWorksInit(void);

/*------------------------------------------------------------------------------------------*/
/* 功能: 创建一个任务                                                                       */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXCreateTask(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 根据应用层任务ID取任务的任务描述表		                                            */
/*------------------------------------------------------------------------------------------*/
OS_TaskDesp *VXGetTaskTab(OSINT8 id);

/*------------------------------------------------------------------------------------------*/
/* 功能: 区当前任务的应用层任务ID	                                                        */
/*------------------------------------------------------------------------------------------*/
HANDLE VXGetCurrentTaskId();

/*------------------------------------------------------------------------------------------*/
/* 功能: 任务保护，通过禁止任务调度实现                                                     */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXProtect(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 禁止任务保护，通过允许任务调度实现                                                 */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXUnProtect(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 任务挂起操作						                                                */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXTaskSuspend(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 任务恢复操作						                                                */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXTaskResume(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 任务恢复操作						                                                */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXTaskKill(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 任务延时							                                                */
/*------------------------------------------------------------------------------------------*/
void VXTaskDly(OSINT16 msecond);

/*------------------------------------------------------------------------------------------*/
/* 功能: 创建二进制信号量,提供给应用程序使用                                                      */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXBSemCreate(BYTE *name,TMutexHandle *pmux,OSINT16 flag);

/*------------------------------------------------------------------------------------------*/
/* 功能: 创建计数信号量,提供给应用程序使用                                                      */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXCSemCreate(BYTE *name,TCSemHandle *pCSem,OSINT16 flag);

/*------------------------------------------------------------------------------------------*/
/* 功能: 获取信号量,提供给应用程序使用                                                      */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXSemGet(TMutexHandle MutexId, OSINT16 TimeOut);

/*------------------------------------------------------------------------------------------*/
/* 功能: 释放信号量,提供给应用程序使用                                                      */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXSemRelease(TMutexHandle MutexId);

/*------------------------------------------------------------------------------------------*/
/* 功能: 获取系统动态RAM空间			                                                    */
/*------------------------------------------------------------------------------------------*/
void *VXMemAlloc(DWORD Length);

/*------------------------------------------------------------------------------------------*/
/* 功能: 屏蔽intLockLevelSet所设定的级别一下的中断，操作系统首先将屏蔽的优先级设定为最高	*/
/*------------------------------------------------------------------------------------------*/
DWORD VXIntLock(void);

/*------------------------------------------------------------------------------------------*/
/* 功能: 消除被关闭的中断优先级																*/
/*------------------------------------------------------------------------------------------*/
void VXIntUnLock(DWORD intLev);

/*************************************************************************************
* 中断加载                                                          
*************************************************************************************/
OSINT16 VXSetVector(DWORD ivect,TISR_ENTRY isr,DWORD arg);

/*************************************************************************************
* 中断允许                                                          
*************************************************************************************/
OSINT16 VXIntEnable(DWORD ivect);

/*************************************************************************************
* 中断禁止                                                          
*************************************************************************************/
OSINT16 VXIntDisable(DWORD ivect);

/*------------------------------------------------------------------------------------------*/
/* 功能: 设置任务定时器                                                                     */
/*------------------------------------------------------------------------------------------*/
//注意对于特殊定时器，interval的时间单位为分钟
OSINT16 VXSetTimer(OS_TaskDesp *pTask,OSINT8 sign, OSINT16 interval, TSysTime *pBeginTime);

/*------------------------------------------------------------------------------------------*/
/* 功能: 删除任务定时器                                                                     */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXDelTimer(OS_TaskDesp *pTask,OSINT8 sign);

/*------------------------------------------------------------------------------------------*/
/* 功能: 删除指定任务所有的定时器，任务被删除时使用                                             */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXDelAllTaskTimer(OS_TaskDesp *pTask);

/*------------------------------------------------------------------------------------------*/
/* 功能: 向任务发送消息                                                                     */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXPostMessage(OS_TaskDesp *pTask, OSINT16 msg, OSINT32 harg, OSINT32 warg,\
													OSINT32 parg, OSINT16 larg);

/*------------------------------------------------------------------------------------------*/
/* 功能: 从任务消息队列中取出一条消息,消息队列空时任务进入阻塞状态                          */
/*------------------------------------------------------------------------------------------*/
OSINT16 VXGetMessage(OS_TaskDesp *pTask,TMessage* msg, BYTE mode);

void VXEventTimer(OS_TaskDesp *pTask,DWORD event);
void VXEvDBNotify(OS_TaskDesp *pTask);
void VXEventMsg(OS_TaskDesp *pTask, DWORD dwEvent);

#endif

#endif
