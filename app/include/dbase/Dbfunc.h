/********************************************************************************************************/
/*																										*/
/*        						天津凯发电气股份有限公司												*/
/*																										*/
/********************************************************************************************************/

/********************************************************************************************************/
/*																										*/
/* 文件名称                                           版本号											*/
/*																										*/
/*      Dbfunc.h                                     1.0												*/
/*																										*/
/* 描述																									*/
/*																										*/
/*   	该文件声明数据库相关的接口函数																	*/
/*																										*/
/* 作者																									*/
/*																										*/
/*      l.z																								*/
/*																										*/
/* 定义的数据结构																						*/
/*																										*/
/*      None																							*/
/*																										*/
/* 函数																									*/
/*																										*/
/*	DB_GetAINum()					读取遥测个数														*/
/*	DB_ReadAI()						从遥测库中取一个遥测数据											*/
/*	DB_WriteAI()					向遥测库中写一个遥测数据											*/
/*	DB_GetDispOfAI()				读取一个遥测的类型描述												*/
/*	DB_GetBINum()					读取遥信个数														*/
/*	DB_ReadBI()						从遥信库中取一个遥信数据											*/
/*	DB_WriteBI()					向遥信库中写一个遥信数据											*/
/*	DB_GetCINum()					读取电度个数														*/
/*	DB_ReadCI()						从电度库中取一个电度数据											*/
/*	DB_WriteCI()					向电度库中写一个电度数据											*/
/* 	DB_GetBONum()					读取遥控个数														*/
/*	DB_BOSelect()					遥控预置操作														*/
/*	DB_BOSelectEcho()				遥控预置响应														*/
/*	DB_BOExec()						遥控执行操作														*/
/*	DB_BOExecEcho()					遥控执行响应														*/
/*	DB_BODirect()					遥控直接执行操作													*/
/*	DB_BODirectEcho()				遥控直接执行响应													*/
/*	DB_AOSelcet()					遥调预置操作														*/
/*	DB_AOSelectEcho()				遥调预置响应														*/
/*	DB_AOExec()						遥调执行操作														*/
/*	DB_AOExecEcho()					遥调执行响应														*/
/*	DB_AODirect()					遥调直接执行操作													*/
/*	DB_AODirectEcho()				遥调直接执行响应													*/
/*	DB_GetBIENum()					获取未读取变位遥信数据个数											*/
/*	DB_BIEIsEmpty()					变位遥信缓冲区是否为空												*/
/*	DB_ReadBIE()					从数据库中读取一条变位遥信数据										*/
/*	DB_WriteBIE()					向数据库中写入一条变位遥信数据										*/
/*	DB_GetBIEHead()					取变位遥信缓冲区头指针												*/
/*	DB_GetBIERead()					取变位遥信缓冲区读指针												*/
/*	DB_IncBIERead()					递增变位遥信缓冲区读指针											*/
/*	DB_GetSOENum()					获取未读取SOE数据个数												*/
/*	DB_SOEIsEmpty()					SOE缓冲区是否为空													*/
/*	DB_ReadSOE()					从数据库中读取一条SOE数据											*/
/*	DB_WriteSOE()					向数据库中写入一条SOE数据											*/
/*	DB_GetSOEHead()					取SOE缓冲区头指针													*/
/*	DB_GetSOERead()					取SOE缓冲区读指针													*/
/*	DB_IncSOERead()					递增SOE缓冲区读指针													*/
/*	DB_GetRMNum()					从数据库中取保护测量值个数											*/
/*	DB_ReadRM()						从遥测库中取一个保护测量值数据										*/
/*	DB_WriteRM()					向遥测库中写一个保护测量值数据										*/
/*	DB_GetAITofRM()					读取一个保护测量值的遥测类型描述									*/
/*	DB_GetCFofRM()					读取一个保护测量值的系数											*/
/*	DB_GetRTofRM()					读取一个保护测量值的变比											*/
/*	DB_RelayStart()					保护动作启动注册													*/
/*	DB_RelayWriteFD()				写入保护启动的故障电量												*/
/*	DB_RelayAction()				写入保护动作分报告													*/
/*	DB_RelayEnd()					保护动作结束														*/
/*	DB_RelayAlarm()					产生保护告警报告													*/
/*	DB_ReadSGJB()					从设备库中读取保护动作报文											*/
/*	DB_WriteSGJB()					向设备库中写入保护动作报文											*/
/*	DB_GetSGJBNum()					获取保护动作报文库中未读取报文的数目								*/
/*	DB_GetSGJBRead()				获取保护动作报文库的读指针											*/
/*	DB_GetSGJBHead()				获取保护动作信息缓冲区的头指针										*/
/*	DB_IncSGJBRead()				递增保护动作信息缓冲区的头指针										*/
/*	DB_GetSWNum()					从数据库中取软压板个数												*/
/*	DB_GetSWStatus()				从数据库中取一个软压板状态											*/
/*	DB_SetSWStatus()				向数据库中写入一个软压板状态										*/
/*	DB_SetSWStatusConfirm()			向数据库中写入一个软压板状态确认									*/
/*	DB_GetCFGNum()					从数据库中取一个配置字状态											*/
/*	DB_GetCFGStatus()				从数据库中取一个配置字状态											*/
/*	DB_SetCFGStatus()				向数据库中写入一个配置字状态										*/
/*	DB_SetCFGStatusConfirm()		向数据库中写入一个配置字状态确认									*/
/*	DB_GetSettingNum()				从数据库中取定值个数												*/
/*	DB_GetSettingFloatValue()		从数据库中读取定值的浮点数											*/
/*	DB_GetSettingFixValue()			从数据库中读取定值的整点数											*/
/*	DB_SetSettingValue()			向数据库中写入定值													*/
/*	DB_SetSETValueConfirm()			向数据库中写入定值确认												*/
/*	DB_GetCurrentSettingAreaNo()	读取当前定值区号													*/
/*	DB_SetCurrentSettingAreaNo()	设置当前定值区号													*/
/*	DB_GetSystemSettingNum()		从数据库中取辅助定值个数											*/
/*	DB_GetSystemSettingValue()		从数据库中读取辅助定值（浮点数）									*/
/*	DB_SetSystemSettingValue()		向数据库中写入辅助定值确认											*/
/*	DB_SetSystemSettingValueConfirm()向数据库中写入辅助定值确认											*/
/*	DB_GetRTNum()					从数据库中取变比个数												*/
/*	DB_GetRTValue()					从数据库中读取变比（浮点数）										*/
/*	DB_SetRTValue()					向数据库中写入变比													*/
/*	DB_SetRTValueConfirm()			向数据库中写入变比确认												*/
/*	DB_GetCFNum()					从数据库中取系数个数												*/
/*	DB_GetCFValue()					从数据库中读取系数值												*/
/*	DB_SetCFValue()					向数据库中写入系数值												*/
/*	DB_SetCFValueConfirm()			向数据库中写入系数值确认											*/
/*																										*/
/* 头文件说明																							*/
/*																										*/
/*		Dbasedef.h						数据库结构定义													*/
/*																										*/
/* 修改历史																								*/
/*																										*/
/*      修改人           修改日期       修改内容														*/
/*																										*/
/*      l.z             2008-03-15      初始创建,版本号1.0												*/
/********************************************************************************************************/
#ifndef __DBFUNC_H
#define __DBFUNC_H

#include "Dbasedef.h"	/*数据库结构定义*/
#include "db_err.h"

#define	DB_BLANK			0xFFFF

TRunTimeAI	*DB_GetAIBase();
TRunTimeBI	*DB_GetBIBase();
TRunTimeCI	*DB_GetCIBase();
TRunTimeBO	*DB_GetBOBase();

/************************************************************
	功能：读取遥测个数
	参数：无
	返回：遥测个数
************************************************************/
WORD	DB_GetAINum();

/************************************************************
	功能：从遥测库中取一个遥测数据
	参数：no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadAI( WORD no, long*retval );

/************************************************************
	功能：从遥测库中取遥测浮点数据。
	参数：no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadFloatAI( WORD no, float *retval );

/************************************************************
	功能：从遥测库中取二次侧遥测数据。
	参数：no,		--  序号
		  retval	--  返回的值
			sUnit	  --  单位
			nDec	  --  小数点位数
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadSecondAI( WORD no, long *retval,char *sUnit=NULL, BYTE *nDec=NULL);

/************************************************************
	功能：从遥测库中取一次侧遥测数据。
	参数：no,		--  序号
		  retval	--  返回的值
		  sUnit		--  单位
		  nDec		--	小数点位数
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadFirstAI( WORD no, long *retval, char *sUnit=NULL, BYTE *nDec=NULL);

#define	DB_WRITE_NORMAL				0	
#define	DB_WRITE_COMPEL				1	
#define	DB_WRITE_UNCOMPEL			2	
/************************************************************
	功能：向遥测库中写一个遥测数据
	参数：no,		--  遥测的序号
		  value,	--  遥测值
	     mode		--  写入模式 	DB_WRITE_COMPEL：强制置数 DB_WRITE_UNCOMPEL：取消强制置数数		
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_WriteAI(WORD no, long value, DWORD mode = DB_WRITE_NORMAL );

/************************************************************
	功能：读取遥信个数
	参数：无
	返回：遥信个数
************************************************************/
WORD	DB_GetBINum();

/************************************************************
	功能：向遥信库中写一个遥信数据
	参数： 
	      no,		--  遥信的序号
		  value,	--  遥信值		BI_OPEN BI_CLOSE
	     mode		--  写入模式 	DB_COMPEL：强制置数	DB_UNCOMPEL：取消强制置数
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_WriteBI(WORD no, BYTE  value, DWORD mode = DB_WRITE_NORMAL );

/************************************************************
	功能：从遥信库中取一个带品质描述的遥信
	参数： 
	      no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadBIWithQuality(WORD no, BYTE *retval);

/************************************************************
	功能：从遥信库中取一个遥信数据
	参数： 
	      no,		--  序号
		  retval	--  返回的值 BI_OPEN BI_CLOSE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadBI(WORD no, BYTE  *retval );

#define	DB_BI_BYTE18		1
#define	DB_BI_BYTE81		2
/*------------------------------------------------------------------------------------------
	功  能：从设备中取一个字节遥信（小于等于8个遥信）数据
	参数： 
	 	dev,     	--  设备名,没用和主处理器兼容
	  	start,    	--  起始序号
	 	retval   	--  返回的值 BI_OPEN BI_CLOSE
         mode      	--  遥信字节中遥信的排列顺序。
                         DB_BI_BYTE18:遥信从D0排到D7
                         DB_BI_BYTE81:遥信从D7排到D0
	返回：正确返回0，错误返回错误值。
-------------------------------------------------------------------------------------------*/
STATUS DB_ReadBIByte(WORD start, BYTE *retval, WORD mode);

/************************************************************
	功能：读取电度个数
	参数：无
	返回：电度个数
************************************************************/
WORD	DB_GetCINum();

/************************************************************
	功能：设置一个电度底数
	参数： 
	      no,		--  电度序号
		  value,	--  值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCI(WORD no, DWORD value);

/************************************************************
	功能：向电度库中累加一个电度数据
	参数： 
	      no,		--  电度序号
		  value,	--  值
	     mode		--  写入模式 	DB_COMPEL：强制置数	DB_UNCOMPEL：取消强制置数
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_WriteCI(WORD no, DWORD value, DWORD mode = DB_WRITE_NORMAL );

/************************************************************
	功能：从电度库中取一个电度数据
	参数： 
	      no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadCI(WORD no, DWORD *retval );

/************************************************************
	功能：读取遥控个数
	参数：无
	返回：遥控个数
************************************************************/
WORD	DB_GetBONum();
/************************************************************
	功能：读取直接数字采样点个数
	参数：无
	返回：数字采样点个数
************************************************************/
WORD	DB_GetDINum();


#define	BO_NULL				0
#define	BO_OPEN				1
#define	BO_CLOSE			2

#define BO_RET_OK			1
#define BO_RET_ERROR		1
#define BO_RET_TIMEOUT		6
/************************************************************
	功能：遥控预置操作
	参数： switchno		-- 遥控点号
	       attr,     	-- 遥控属性 BO_OPEN、BO_CLOSE、 BO_NULL
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	 DB_BOSelect(WORD  switchno, WORD  attr);

/************************************************************
	功能：遥控预置响应
	参数：switchno, 	-- 遥控点号
	          attr,     -- 遥控属性 BO_OPEN、BO_CLOSE、BO_NULL
              result    -- 遥控反较结果 0 -- 正确，其他 -- 错误
	返回：正确返回0，错误返回错误值。
************************************************************/
DWORD DB_BOSelectEcho(WORD index,WORD attr,WORD result );

/************************************************************
	功能：遥控执行操作
	参数： switchno,	-- 遥控点号
	          attr,		-- 遥控属性 BO_OPEN、 BO_CLOSE、BO_NULL
              mode		-- 遥控方式 1 -- 遥控执行，2 -- 遥控撤消
	返回：正确返回0，错误返回错误值。
************************************************************/
DWORD DB_BOExec(WORD switchno,WORD attr,WORD mode );

/************************************************************
	功能：遥控执行响应
	参数：switchno,  	--   实际库遥控号
			attr,		--   遥控属性 BO_OPEN、BO_CLOSE、BO_NULL
     		mode		-- 	遥控方式1 -- 遥控执行，2 -- 遥控撤消
			result		--   返回值 0 -- 正确，其他 -- 错误
	返回：正确返回0，错误返回错误值。
************************************************************/
DWORD DB_BOExecEcho(WORD index,WORD attr,WORD mode,WORD result );

/************************************************************
	功能：遥控直接执行操作
	参数： switchno,	-- 遥控点号
	       attr,		-- 遥控属性 BO_OPEN、BO_CLOSE、BO_NULL
	返回：正确返回0，错误返回错误值。
************************************************************/
DWORD DB_BODirect(WORD switchno, WORD attr );

/************************************************************
	功能：遥控直接执行响应
	参数： switchno,	-- 遥控点号
			attr,		--   遥控属性 BO_OPEN、BO_CLOSE、BO_NULL
     		mode		-- 	遥控方式1 -- 遥控执行，2 -- 遥控撤消
			result		--   返回值 0 -- 正确，其他 -- 错误
	返回：正确返回0，错误返回错误值。
************************************************************/
DWORD DB_BODirectEcho(WORD index,WORD attr,WORD result );

/************************************************************
	功能：保护传动操作
	参数： no			-- 传动路号，与遥控路号不同
	       par,     	-- 传动时间
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	 DB_BOTest(WORD  no, WORD  time);

/************************************************************
	功能：读取遥调个数
	参数：无
	返回：遥调个数
************************************************************/
WORD	DB_GetAONum();

/************************************************************
	功能：遥调请求操作
	参数： no		-- 遥调点号
	       value,	-- 遥调值 
	返回：正确返回0，错误返回错误值
************************************************************/
DWORD DB_AOSelect(WORD no,long value);

/************************************************************
	功能：遥调预置返校
	参数： no,     	--   实际库遥调号
		value   	--   遥调值 
		result 		--   返回值 0 -- 正确， 
								1 -- 请求的遥调路号错误，
                                2 -- 请求的遥调值不合法
	返回：正确返回0，错误返回错误值
************************************************************/
DWORD DB_AOSelectEcho(WORD no, long  value, WORD result );

#define	AO_EXECUTE			1
#define	AO_CANCEL			2

/************************************************************
	功能：遥调执行操作
	参数： no,    	-- 遥调点号
	       value, 	-- 遥调值
            mode   	-- 执行方式 1 -- 遥调执行，2 -- 遥调撤消
	返回：正确返回0，错误返回错误值
************************************************************/
DWORD DB_AOExec(WORD no, short value, WORD mode );

/************************************************************
	功能：遥调执行反校
	参数： no,    		--   实际库遥调号
			value,		--   遥调值   
           mode,  		--   执行方式	1 -- 遥调执行， 2 -- 遥调撤消
			result		--   返回值		0 -- 正确，		1 -- 错误
	返回：正确返回0，错误返回错误值
************************************************************/
DWORD DB_AOExecEcho(WORD no, short value, WORD mode, WORD result );

/************************************************************
	功能：遥调直接执行操作
	参数： no,     	-- 遥调点号
	       value,  	-- 遥调值 
	返回：正确返回0，错误返回错误值
************************************************************/
DWORD DB_AODirect(WORD no,short value);

/************************************************************
	功能：遥调直接执行反较
	参数： no,    	--   实际库遥调号
			value  	--   遥调值 
			result 	--   返回值 0 -- 遥调执行成功， 1 -- 遥调执行失败
	返回：正确返回0，错误返回错误值
************************************************************/
DWORD DB_AODirectEcho(WORD no, short value, WORD result );

/************************************************************
	功能：获取未读取变位遥信数据个数
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetBIENum(WORD *retval);

/************************************************************
	功能：变位遥信缓冲区是否为空。
	参数：无
	返回：TRUE/FALSE
************************************************************/
BOOL DB_BIEIsEmpty();

/************************************************************
	功能：从数据库中读取一条变位遥信数据
	参数：	rp   	--  读取数据用的指针,当BLANK时用内部读指针
			*event	--	返回的事项指针
	返回：正确返回0，错误返回错误代码
************************************************************/
STATUS DB_ReadBIE(TBurstBI *event, DWORD rp=DB_BLANK );

/************************************************************
	功能：向数据库中写入一条变位遥信数据
	参数：event, --  写入的数据 
	返回：正确返回0，错误返回错误代码
************************************************************/
STATUS DB_WriteBIE(TBurstBI *pEvent );

/************************************************************
	功能：取变位遥信缓冲区头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetBIEHead(WORD *retval);

/************************************************************
	功能：取变位遥信缓冲区尾指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetBIETail(WORD *retval);
		
/************************************************************
	功能：取变位遥信缓冲区读指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetBIERead(WORD *retval);

/************************************************************
	功能：递增变位遥信缓冲区读指针
	参数： 无
	返回：头指针
************************************************************/
STATUS DB_IncBIERead();


/************************************************************
	功能：获取未读取SOE数据个数
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetSOENum(WORD *retval);

/************************************************************
	功能：SOE缓冲区是否为空。
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
BOOL DB_SOEIsEmpty();

/************************************************************
	功能：从数据库中读取一条SOE数据
	参数：rp		--  读取数据用的指针,当BLANK时用内部读指针
	输出：event		--  返回的数据 
	返回：正确返回0，错误返回错误代码
************************************************************/
STATUS DB_ReadSOE(TEventBI *pEvent, DWORD rp=DB_BLANK );

/************************************************************
	功能：向设备中写入一条SOE数据
	参数：pEvent,	--  写入的数据 
			
 	返回：正确返回0，错误返回错误代码
************************************************************/
STATUS DB_WriteSOE( TEventBI *pEvent );

/************************************************************
	功能：取SOE缓冲区头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetSOEHead(WORD *retval);

/************************************************************
	功能：取SOE缓冲区尾指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetSOETail(WORD *retval);

/************************************************************
	功能：取SOE缓冲区读指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetSOERead(WORD *retval);

/************************************************************
	功能：递增SOE缓冲区读指针
	参数：无
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_IncSOERead();

/************************************************************
	功能：从数据库中取保护测量值个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetRMNum();

/************************************************************
	功能：从数据库中取保护动作描述个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetRENum();

/************************************************************
	功能：从数据库中取传动个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetTCNum();

/************************************************************
	功能：读取保护测量值原始数据。
	参数：no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadRM( WORD no, long *retval );

/************************************************************
	功能：从遥测库中取二次侧保护测量值数据。
	参数：no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadSecondRM( WORD no, long*retval );

/************************************************************
	功能：从遥测库中取一次侧保护测量值数据。
	参数：no,		--  序号
		  retval	--  返回的值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_ReadFirstRM( WORD no, long *retval );

/************************************************************
	功能：向遥测库中写一个保护测量值数据。
	参数：no,		--  序号
		  value,	--  测量值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_WriteRM(WORD no, long value );

#define	RELAY_INF_NOUSED	0xFFFF
/************************************************************
	功能：保护动作启动注册
	参数：Seq		-- 全局临时序号，用于区分并发的两个动作信息，生命周期仅贯穿于一个完整动作报告产生过程
		Inf			--保护动作索引编号
		Time		--启动时间
		bMakeStart	--是否记录本次启动报告
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_RelayStart (WORD wSeq, WORD wInf, TAbsTime *pTime,BOOL bMakeStart);

/************************************************************
	功能：写入保护启动的故障电量
	参数：Seq	-- 全局临时序号，同上。
	  pFDList	-- 故障电量列表
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_RelayWriteFD (WORD Seq, long *pFDList);

/************************************************************
	功能：写入保护动作分报告
	参数：Seq	-- 全局临时序号，同上。
		pAction	-- 保护分报告信息指针
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_RelayAction (WORD Seq, TRelayEventItem *pAction);

/************************************************************
	功能：保护动作结束
	参数：Seq	-- 全局临时序号，同上。
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_RelayEnd (WORD Seq,BOOL bValid=TRUE);

/************************************************************
	功能：保护动作定时存盘
	参数：无
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_SaveRelayActionOnTime();

/************************************************************
	功能：写入保护动作分报告
	参数：
		*pAlarm		-- 保护分报告信息指针
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_RelayAlarm (TRelayEventItem *pAlarm);

/************************************************************
	功能：产生保护事项报告
	参数：	wInf		--保护动作索引编号
		 	*pTime		--启动时间，空指针时取系统当前时间
			pFDList		--故障电量列表
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_MakeRelayEventReport(WORD wInf, TAbsTime *pTime,long *pFDList);

/************************************************************
	功能：从设备库中读取保护告警报文
	参数： *pReport 	--  读出的保护告警信息
			rp    		--  外部读指针（维护用），一般任务用BLANK
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_ReadRelayAlarmReport(TRelayAlarmEv *pReport, WORD rp);

/************************************************************
	功能：向设备库中写入保护告警报文
	参数： *pReport 	--  待写入的保护告警信息                      
			pTime 		--  保护告警发生的时间。当为空时，使用系统时间。
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_WriteRelayAlarmReport(TRelayAlarmEv *pReport, TAbsTime *pTime=NULL);

/************************************************************
	功能：获取保护告警报文库中未读取报文的数目
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayAlarmReportNum(WORD *retval);

/************************************************************
	功能：获取保护告警报文库的读指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayAlarmReportRead(WORD *retval);

/************************************************************
	功能：获取保护告警信息缓冲区的头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayAlarmReportHead(WORD *retval);

/************************************************************
	功能：获取保护告警信息缓冲区的尾指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayAlarmReportTail(WORD *retval);

/************************************************************
	功能：递增保护告警信息缓冲区的头指针
	参数：无
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_IncRelayAlarmReportRead();

/************************************************************
	功能：从设备库中读取保护启动报文
	参数： *pReport 	--  读出的保护启动信息
			rp    		--  外部读指针（维护用），一般任务用BLANK
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_ReadRelayStartReport(TRelayStartEv *pReport, WORD rp);

/************************************************************
	功能：向设备库中写入保护启动报文
	参数： *pReport 	--  读出的保护启动信息                     
			pTime 		--  保护启动发生的时间，此项用于产生虚拟遥信变化事件用。当为空时，使用系统时间。
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_WriteRelayStartReport(TRelayStartEv *pReport, TAbsTime *pTime=NULL);

/************************************************************
	功能：获取保护启动报文库中未读取报文的数目
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayStartReportNum(WORD *retval);

/************************************************************
	功能：获取保护启动报文库的读指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayStartReportRead(WORD *retval);

/************************************************************
	功能：获取保护启动信息缓冲区的头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayStartReportHead(WORD *retval);

/************************************************************
	功能：获取保护启动信息缓冲区的头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayStartReportTail(WORD *retval);

/************************************************************
	功能：递增保护启动信息缓冲区的头指针
	参数：无
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_IncRelayStartReportRead();


/************************************************************
	功能：从设备库中读取保护告警报文
	参数：	*pReport 	--  读出的保护动作信息
			rp    		--  外部读指针（维护用），一般任务用BLANK
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_ReadRelayActionReport(TRelayActionEv *pReport, WORD rp);

/************************************************************
	功能：向设备库中写入保护动作报文
	参数： *pReport 	--  待写入的保护动作信息                      
			pTime 		--  保护动作发生的时间，此项用于产生虚拟遥信变化事件用。当为空时，使用系统时间。
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_WriteRelayActionReport(TRelayActionEv *pReport, TAbsTime *pTime=NULL);

/************************************************************
	功能：获取保护动作报文库中未读取报文的数目
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayActionReportNum(WORD *retval);

/************************************************************
	功能：获取保护动作报文库的读指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayActionReportRead(WORD *retval);

/************************************************************
	功能：获取保护动作信息缓冲区的头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayActionReportHead(WORD *retval);

/************************************************************
	功能：获取保护动作信息缓冲区的尾指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetRelayActionReportTail(WORD *retval);

/************************************************************
	功能：递增保护动作信息缓冲区的头指针
	参数：无
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_IncRelayActionReportRead();


/************************************************************
	功能：从数据库中取软压板个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetSWNum();
		
#define	SW_STATUS_SET			1
#define	SW_STATUS_CUT			2
			
/************************************************************
	功能：从数据库中取一个软压板状态
	参数：no,    		--  软压板序号
		  Status	    --  软压板状态	
						投：SW_STATUS_SET，切：SW_STATUS_CUT
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetSWStatus( WORD no, BYTE &Status);
		
/************************************************************
	功能：向数据库中写入一个软压板状态
	参数：no,    		--  软压板序号
		  Status	    --  软压板状态	
						投：SW_STATUS_SET，切：SW_STATUS_CUT
	返回：正确返回0，错误返回错误值。
************************************************************/	
STATUS DB_SetSWStatus( WORD no, BYTE Status );


#define	DB_EXECUTE	1
#define DB_CANCEL	2
/************************************************************
	功能：向数据库中写入一个软压板状态确认
	参数：no,    		--  软压板序号
			Attr		--  操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetSWStatusConfirm( WORD no ,WORD Attr=DB_EXECUTE);

/************************************************************
	功能：向数据库中写入全部软压板状态
	参数：no,    		--  软压板序号
		  Status	    --  软压板状态表	
						投：CFG_STATUS_SET，切：CFG_STATUS_CLR
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetAllSWStatus(PBYTE Status);

/************************************************************
	功能：向数据库中写入全部软压板状态确认
	参数：Attr		--  操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetAllSWStatusConfirm(WORD Attr=DB_EXECUTE);

/************************************************************
	功能：从数据库中取配置字个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetCFGNum();

#define	CFG_ONEWORD_FLAG		0x8000
#define	CFG_STATUS_SET			1
#define	CFG_STATUS_CLR			2

/************************************************************
	功能：从数据库中取配置字信息
	参数：AreaNo,    	--  配置字区号
		  dwCFGWord	    --  配置字列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetCFGWord(WORD AreaNo,DWORD *dwCFGWord);

/************************************************************
	功能：向数据库中写入配置字
	参数：AreaNo,    	--  配置字区号
		  dwCFGWord	    --  配置字列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCFGWord(WORD AreaNo, DWORD *dwCFGWord);

/************************************************************
	功能：向数据库中写入配置字确认
	参数：no,    		--  配置字序号
			Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCFGWordConfirm(WORD AreaNo,WORD Attr=DB_EXECUTE );

/************************************************************
	功能：从数据库中取一个配置字位状态
	参数：no,    		--  配置字位序号
		  Status	    --  配置字位状态	
							投：CFG_STATUS_SET，切：CFG_STATUS_CLR
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetCFGStatus(WORD AreaNo, BYTE no, BYTE &Status);
		
/************************************************************
	功能：向数据库中写入一个配置字位状态
	参数：no,    		--  配置字位序号
		  Status	    --  配置字位状态	
							投：CFG_STATUS_SET，切：CFG_STATUS_CLR
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCFGStatus(WORD AreaNo, WORD no, BYTE Status);

/************************************************************
	功能：向数据库中写入一个配置字位状态确认
	参数：no,    		--  配置字位序号
			Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCFGStatusConfirm(WORD AreaNo,WORD no,WORD Attr=DB_EXECUTE);

/************************************************************
	功能：从数据库中取定值个数。
	参数：无
	返回：正确返回个数，错误返回0xFFFF。
************************************************************/
WORD	DB_GetSETNum();

#define	SET_AREA_CURRENT			0xFFFF
#define	SET_VALUE_ALL				0xFFFF
/************************************************************
	功能：从数据库中读取定值的浮点数。
	参数：	AreaNo		--  定值区号。	SET_AREA_CURRENT代表当前定值区，
			no,   		--  定值序号。	SET_VALUE_ALL代表全部定值

			fValue	    --  浮点定值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetSETFloatValue( WORD AreaNo,WORD no, float *fValueList);
	
/************************************************************
	功能：从数据库中读取定值的整点数。
	参数：	AreaNo		--  定值区号。同上。
			no,   		--  定值序号。同上。
		  fValue	    --  定点定值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetSETFixValue( WORD AreaNo,WORD no, long *lValueList);
	
/************************************************************
	功能：向数据库中写入定值
	参数：	AreaNo		--  定值区号。同上。
			no,   		--  定值序号。同上。
			fValue	    --  定点定值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetSETValue(WORD AreaNo,WORD no, float *fValueList );

/************************************************************
	功能：向数据库中写入定值确认
	参数：	AreaNo   --  定值区号。同上。
			no,   	 --  定值序号。同上。
		Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetSETValueConfirm(WORD AreaNo,WORD no,WORD Attr=DB_EXECUTE);

/************************************************************
	功能：更新定点定值
	参数：NONE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_UpdateSETFixDataBase();

/************************************************************
	功能：读取定值区个数。
	参数：	无	
	返回：正确返回定值区个数，错误返回0xFF。
************************************************************/
WORD 	DB_GetSETAreaNum();

/************************************************************
	功能：读取当前定值区号。
	参数：	无	
	返回：正确返回定值区号，错误返回0xFF。
************************************************************/
WORD 	DB_GetCurrentSETAreaNo();

/************************************************************
	功能：设置当前定值区号。
	参数：	AreaNo   --  定值区号。
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCurrentSETAreaNo ( WORD AreaNo);

/************************************************************
	功能：设置当前定值区号确认
	参数：	AreaNo   --  定值区号。
			Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCurrentSETAreaNoConfirm ( WORD AreaNo,WORD Attr=DB_EXECUTE);

/************************************************************
	功能：从数据库中取辅助定值个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetSystemSETNum();

/************************************************************
	功能：从数据库中读取辅助定值（浮点数）。
	参数：	no,   		--  定值序号	SET_VALUE_ALL代表全部定值
		    fValue		--  浮点定值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetSystemSETFloatValue(WORD no, float *fValueList);

/************************************************************
	功能：从数据库中读取辅助定值（定点数）。
	参数：	no,   		--  定值序号	SET_VALUE_ALL代表全部定值
		    lValue		--  定点定值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetSystemSETFixValue(WORD no, long *lValueList);
		
/************************************************************
	功能：向数据库中写入辅助定值。
	参数：no,   	 	--  定值序号。同上。
		  fValue	   	--  定点定值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetSystemSETValue (WORD no, float *fValueList );

/************************************************************
	功能：向数据库中写入辅助定值确认。
	参数：	AreaNo   --  定值区号。同上。
			no,   	 --  定值序号。同上。
			Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetSystemSETValueConfirm(WORD no,WORD Attr=DB_EXECUTE);

/************************************************************
功能：通过第一个辅助定值（额定电流）判断当前系统是否事是1A额定电流。
	  该函数用于当前系数读写时，判断应该读写那个区。
参数：	无	
返回：辅助定值1A返回TRUE，否则返回错误。		
************************************************************/
BOOL	DB_Is1ASystem();

/************************************************************
功能：当前系统故障电量是否显示一次值 
参数：无	
返回：TRUE/FALSE		
************************************************************/
BOOL	DB_IsFDShowFirst();

/************************************************************
功能：当前系统是否要计算积分电度
参数：无	
返回：TRUE/FALSE		
************************************************************/
BOOL	DB_IsCaculateIntegral();
/************************************************************
功能：当前GPS时钟源为何种?
参数：无	
返回：TRUE,DK3511/FALSE	,KF6511	
************************************************************/
BOOL	DB_WhichIRGB();

/************************************************************
	功能：从数据库中取变比个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetRTNum();

/************************************************************
	功能：从数据库中读取变比（浮点数）。
	参数：	no,   	 --  变比序号	RT_VALUE_ALL代表全部变比
		    fValueList	 --  浮点变比列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetRTValue(WORD no, float *fValueList);
		
/************************************************************
	功能：向数据库中写入变比。
	参数：no,   	 	--  变比序号。同上。
		  fValue	   	--  浮点变比列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetRTValue (WORD no, float *fValueList );

/************************************************************
	功能：向数据库中写入变比确认。
	参数：	AreaNo   --  变比区号。同上。
			no,   	 --  变比序号。同上。
			Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetRTValueConfirm(WORD no,WORD Attr=DB_EXECUTE);

/************************************************************
	功能：从数据库中取系数个数。
	参数：无
	返回：正确返回个数，错误返回0xFF。
************************************************************/
WORD	DB_GetCFNum();

#define	CF_VALUE_ALL			0xFFFF
/************************************************************
	功能：从数据库中读取系数值。
	参数：	no,   		--  系数序号	CF_VALUE_ALL代表全部系数值
		    lValueList	--  系数值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_GetCFValue(WORD no,long *lValueList);
		
/************************************************************
	功能：向数据库中写入系数值。
	参数：	no,   		--  系数序号。同上。
		    lValueList	--  系数值列表	
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCFValue (WORD no, long *lValueList );

/************************************************************
	功能：向数据库中写入系数值确认。
	参数：	no,   		--  系数序号。同上。
			Attr		--	操作属性,=DB_EXECUTE 执行;=DB_CANCEL 取消
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_SetCFValueConfirm(WORD no,WORD Attr=DB_EXECUTE);

/************************************************************
	功能：升级系数数据。
	参数: NONE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_UpdateCFBase();


#define	SYS_RESET_WARM			0
#define	SYS_RESET_COLD			1
/************************************************************
	功能：注册一个系统复位事件。
	参数：status	-- 复位方式   0 ：热复位 1：冷复位
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_Reset (DWORD status);

/************************************************************
	功能：注册一个文件下装事件。
	参数：chFileNo 	-- 文件名
		   Flag		-- 文件操作结果
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_FileDown (char *chFileNo,DWORD Flag);

/************************************************************
	功能：注册一个通信事件。
	参数：	status		-- 0：通信恢复 1：通信失败
			dwPortID	通信终端的端口
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_Comm (DWORD status,DWORD dwPortID);

/************************************************************
	功能：注册一个遥控事件。
	参数： 	no,  		-- 遥控号
			attr		-- 操作属性 0：空 1：分 2：合
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_BO(WORD no, WORD attr);

/************************************************************
	功能：注册一个遥调事件。
	参数： 	no,  		-- 遥调号
			lValue		-- 输出值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_AO(WORD no, long  lValue);

/************************************************************
	功能：注册一个修改定值事件。
	参数： 	AreaNo,		-- 定值区号
			SETNo	-- 定值序号
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_SET(WORD AreaNo,WORD SETNo);

/************************************************************
	功能：注册一个修改当前定值区号事件。
	参数： 	AreaNo,		-- 定值区号
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_SETArea (WORD AreaNo);

#define PARA_TYPE_COMMON		1
#define PARA_TYPE_PORT			2
#define PARA_TYPE_RELAY			3
/************************************************************
	功能：注册一个修改参数事件。
	参数： 	ParaType,   -- 参数类别
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_ParaChange (DWORD 	ParaType,WORD no);

#define	POWER_ON			0
#define	POWER_OFF			1
/************************************************************
	功能：注册一个修改参数事件。
	参数： 	Status,		-- 0：上电 1：停电
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_PowerOnOff (DWORD Status);

/************************************************************
	功能：注册一个软压板投切事件。
	参数：no,    		--  软压板序号
		  Status	    --  软压板状态	
						投：CFG_STATUS_SET，切：CFG_STATUS_CLR
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_SW (WORD no,BYTE Status);

/************************************************************
	功能：注册一个配置字投切事件。
	参数：no,    		--  配置字序号
		  Status	    --  软压板状态	
							投：CFG_STATUS_SET，切：CFG_STATUS_CLR
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_CFG (WORD no,BYTE Status);

/************************************************************
	功能：注册一个系数修改事件。
	参数：no,    		--  系数序号
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_CF (WORD no);

/************************************************************
	功能：注册一个置数操作。
	参数：no,    		--  植入序号
	参数：dwValue,    	--  植入数值
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_Register_SetData (WORD Type,WORD no,DWORD dwValue);

/************************************************************
	功能：获取录波数据长度
	参数: None
	返回：正确返回0，错误返回错误值。
************************************************************/
DWORD DB_GetDistDataLength();

/************************************************************
	功能：写入录波数据块
	参数: pDistBlock	-- 录波数据指针
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_WriteDistDataBlock (void *pDistBlock);

/************************************************************
	功能：启动一次录波，写入触发前录波数据
	参数: 	pTime		-- 触发时间指针
			dwSamplePtr	-- 采样指针
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS 	DB_StartDistRecord(DWORD dwSamplePtr,TAbsTime *pTime,DWORD dwPrevSampleNum);

/************************************************************
	功能：跟踪写入录波数据块
	参数: pDistBlock	-- 录波数据指针
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS	DB_TraceDistRecord();

/************************************************************
	功能：存储录波数据
	参数: none
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS  DB_SaveDistRecord();

STATUS DB_ModifyParaFile(WORD wType,WORD no);
STATUS DB_ModifyDataFile(WORD wType,WORD no);
STATUS DB_RegisterFileChange(WORD wFileType);
STATUS DB_SaveBasicEventFile();
STATUS DB_SaveRelayEventFile();

STATUS ConvertSETFloat2Fix(WORD no,float fValue,long *plValue);
STATUS ConvertSystemSETFloat2Fix(WORD no,float fValue,long *plValue);
STATUS ConvertSETFix2Float(WORD no,long lValue,float *pfValue);
float _ConvertFloat(float fIn);

BOOL DB_CheckSWData(DWORD *pSW,WORD num);
BOOL DB_CheckSETData(float *pSET,WORD	num);
BOOL DB_CheckSETFixData(long *pSET,WORD	num);
BOOL DB_CheckSETArea(WORD AreaCur,WORD AreaB);
BOOL DB_CheckCFData(long *pCF,WORD num);

DWORD	*DB_GetSWBase();
DWORD	*DB_GetCFGBase();
float	*DB_GetSETFloatBase();
long	*DB_GetSETFixBase();
float	*DB_GetSystemSETBase();
long	*DB_GetCFBase();

/************************************************************
	功能：取用户登录密码
	参数：*strPassWord	返回密码指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetUserPassWord(char *strPassWord);

/************************************************************
	功能：取管理员登录密码
	参数：*strPassWord	返回密码指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetAdminPassWord(char *strPassWord);

/************************************************************
	功能：取用户登录密码
	参数：strUserPassWord	返回用户密码指针;
	      strAdminPassWord	返回管理员密码指针;
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetAccessPassWord(char *strUserPassWord,char *strAdminPassWord);

/************************************************************
	功能：取语言编号
	参数：NONE
	返回：语言编号
************************************************************/
WORD DB_GetLanguageNo();

/************************************************************
	功能：取装置地址
	参数：NONE
	返回：装置地址
************************************************************/
WORD DB_GetAddress();

/************************************************************
	功能：读取网卡A的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：读取结果
************************************************************/
STATUS DB_GetEthAPara(DWORD &dwIP,DWORD &dwMask,DWORD &dwGateWayIP);

/************************************************************
	功能：读取网卡B的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：读取结果
************************************************************/
STATUS DB_GetEthBPara(DWORD &dwIP,DWORD &dwMask,DWORD &dwGateWayIP);

/************************************************************
	功能：修改装置地址
	参数：wAddr 装置地址
	返回：修改结果
************************************************************/
STATUS DB_ModifyAddress(WORD wAddr);

/************************************************************
	功能：读取网卡A的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：读取结果
************************************************************/
//STATUS DB_GetNetAIPMask(DWORD &dwIP,DWORD &dwMask);

/************************************************************
	功能：读取网卡B的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：读取结果
************************************************************/
//STATUS DB_GetNetBIPMask(DWORD &dwIP,DWORD &dwMask);

/************************************************************
	功能：修改网卡A的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：修改结果
************************************************************/
STATUS DB_ModifyEthAPara(DWORD dwIP,DWORD dwMask,DWORD dwGateWayIP);

/************************************************************
	功能：修改网卡B的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：修改结果
************************************************************/
STATUS DB_ModifyEthBPara(DWORD dwIP,DWORD dwMask,DWORD dwGateWayIP);

/************************************************************
	功能：修改网卡A的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：修改结果
************************************************************/
//STATUS DB_ModifyNetAIPMask(DWORD dwIP,DWORD dwMask);

/************************************************************
	功能：修改网卡B的IP、子网掩码
	参数：
			dwIP 	IP地址
			wMask	子网掩码
	返回：修改结果
************************************************************/
//STATUS DB_ModifyNetBIPMask(DWORD dwIP,DWORD dwMask);

/************************************************************
功能：设置当前系统故障电量显示模式 
参数：mode 显示模式	FD_SHOWMODE_FIRST/FD_SHOWMODE_SECOND
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
#define FD_SHOWMODE_FIRST    	1
#define FD_SHOWMODE_SECOND    	0
STATUS	DB_SetFDShowMode(BYTE mode);
/************************************************************
功能：设置当前系统GPS时钟源格式
参数：TRUE,DK3511/FALSE,KF6511
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/

STATUS	DB_SetIRGBType(BOOL flag);

/************************************************************
功能：设置当前系统是否计算积分电度
参数：mode: TRUE 计算/FALSE 不计算
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
STATUS	DB_SetCICaculate(BOOL mode);

/************************************************************
功能：设置当前系统语言编号
参数：no 语言编号	
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
STATUS DB_SetLanguageNo(BYTE no);
;
/************************************************************
功能：设置当前系统用户密码
参数：strPassWord 新密码	
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
STATUS DB_SetUserPassWord(const char *strPassWord);

/************************************************************
功能：设置当前系统管理员密码
参数：strPassWord 新密码	
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
STATUS DB_SetAdminPassWord(const char *strPassWord);

/************************************************************
功能：设置当前系统密码
参数：	strUserPassWord 用户密码密码；
		strAdminPassWord管理员密码	
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
STATUS DB_SetAccessPassWord(char *strUserPassWord,char *strAdminPassWord);

/************************************************************
	功能：更新保护数据文件
	参数：NONE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_UpdateRelayDataMap();

/************************************************************
	功能：更新浮点定值
	参数：NONE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_UpdateSETFloatBase();

/************************************************************
	功能：更新辅助定值
	参数：NONE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_UpdateSystemSETBase();

/************************************************************
	功能：更新软压板
	参数: NONE
	返回：正确返回0，错误返回错误值。
************************************************************/
STATUS DB_UpdateSWBase();


STATUS DB_ReadCIRaw(WORD no, DWORD *retval );


STATUS DB_UpdateRelayData();
STATUS DB_UpdateCFData();

#define DB_LogReadBI(no)	\
	( (G_pCfgTable->DBaseConfig.pBI[no].bStatus&0x80) ? TRUE : FALSE)

#define DB_LogWriteRM(no, value )	\
	( G_pCfgTable->DBaseConfig.pRM[no].lValue = value )


/************************************************************
功能：设置当前系统是否计算积分电度
参数：mode: TRUE 计算/FALSE 不计算
返回：设置正确返回 DB_ERR_FILE_OK; 否则返回错误代码		
************************************************************/
STATUS	DB_SetCICaculate(BOOL mode);

/************************************************************
	功能：读取串口规约参数
	参数：
			no 			串口序号
			pConfig		串口规约参数
	返回：读取结果
************************************************************/
STATUS DB_GetSerialConfig(WORD no,TSerialConfig *pConfig);

/************************************************************
	功能：设置串口规约参数
	参数：
			no 			串口序号
			pConfig		串口规约参数
	返回：读取结果
************************************************************/
STATUS DB_SetSerialConfig(WORD no,TSerialConfig *pConfig);

/************************************************************
	功能：读取CAN网规约参数
	参数：
			no 			CANBUS序号
			pConfig		CANBUS规约参数
	返回：读取结果
************************************************************/
STATUS DB_GetCanbusConfig(WORD no,TCanbusConfig *pConfig);

/************************************************************
	功能：设置CAN网规约参数
	参数：
			no 			CANBUS序号
			pConfig		CANBUS规约参数
	返回：读取结果
************************************************************/
STATUS DB_SetCanbusConfig(WORD no,TCanbusConfig *pConfig);

/************************************************************
	功能：读取以太网连接参数
	参数：
			no 			以太网连接序号
			pConfig		以太网连接规约参数
	返回：读取结果
************************************************************/
STATUS DB_GetEthLinkConfig(WORD no,TEthLinkConfig *pConfig);

/************************************************************
	功能：设置以太网连接参数
	参数：
			no 			以太网连接序号
			pConfig		以太网连接规约参数
	返回：读取结果
************************************************************/
STATUS DB_SetEthLinkConfig(WORD no,TEthLinkConfig *pConfig);

/************************************************************
	功能：获取数据库版本号
	参数：无
	返回：版本号
************************************************************/
STATUS DB_GetDataBaseVersion(BYTE *sVersion);

/************************************************************
	功能：清除装置事件区
	参数：无
	返回：正确返回DB_ERR_SUCCESS;错误返回错误码
************************************************************/
STATUS DB_ClearEvent(WORD wMask);

/************************************************************
功能：将基本参数内容从FLASH文件导入EEPROM
参数：NONE
返回：NONE
************************************************************/
void DB_ResetBasicConfig();

/************************************************************
	功能：获取未读取AIE数据个数
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetAIENum(WORD *retval);

/************************************************************
	功能：AIE缓冲区是否为空。
	参数：无
	返回：TRUE/FALSE
************************************************************/
BOOL DB_AIEIsEmpty();

/************************************************************
	功能：从数据库中读取一条AIE数据
	参数：rp		--  读取数据用的指针,当BLANK时用内部读指针
	输出：event		--  返回的数据 
	返回：正确返回0，错误返回错误代码
************************************************************/
STATUS DB_ReadAIE(TEventAI *pEvent, DWORD rp=DB_BLANK );

/************************************************************
	功能：向设备中写入一条AIE数据
	参数：pEvent,	--  写入的数据 
			
 	返回：正确返回0，错误返回错误代码
************************************************************/
STATUS DB_WriteAIE( TEventAI *pEvent );

/************************************************************
	功能：取AIE缓冲区头指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetAIEHead(WORD *retval);

/************************************************************
	功能：取AIE缓冲区尾指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetAIETail(WORD *retval);

/************************************************************
	功能：取AIE缓冲区读指针
	参数：*retval	返回数据指针
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_GetAIERead(WORD *retval);

/************************************************************
	功能：递增AIE缓冲区读指针
	参数：无
	返回：正确返回0，错误返回错误值
************************************************************/
STATUS DB_IncAIERead();

/************************************************************
	功能：取系统控制字
	参数：NONE
	返回：控制字
************************************************************/
DWORD DB_GetSystemControlWord();

/************************************************************
	功能：修改系统控制字
	参数：dwCtrlWord 控制字
	返回：修改结果
************************************************************/
STATUS DB_SetSystemControlWord(DWORD dwCtrlWord);

/************************************************************
	功能：注册一路遥控，用于主站类规约接管遥控
	参数：nBO,		--  遥控序号
	返回：正确返回DB_ERR_OK，错误返回错误值。
************************************************************/
STATUS DB_RegisterBOMsg(WORD nBO);

/************************************************************
	功能：检索遥控是否被注册
	参数：nBO,		--  遥控序号
	返回：正确返回遥控注册信息，错误返回空指针
************************************************************/
TBORegisterInfo *DB_SearchRegisterBO(WORD nBO);

#endif

