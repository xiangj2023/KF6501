///: Relayfun.h

#ifndef _RELAYFUN_H_
#define _RELAYFUN_H_

#include "system.h"
#include "relay_defs.h"
#include "Sample.h"

#define AUTORCTIME 35
#define INHERENTTIME 22			//北京型式实验由22修改为30以减小动作时间
#define RPT_NULL 65535

/************************************************************
	功能：傅氏积分基波算法，除16
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluBaseFourier_S16(const LONG *pDataBuf,TRelElecValPar *elec); 

/************************************************************
	功能：傅氏积分基波算法，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluBaseFourier_S15(const LONG *pDataBuf,TRelElecValPar *elec); 

/************************************************************
	功能：傅氏积分基波算法，除14
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/

void CaluBaseFourier_S14(const LONG *pDataBuf,TRelElecValPar *elec); 

/************************************************************
	功能：傅氏积分二次谐波计算，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluSecondFourier(const LONG *pDataBuf,TRelElecValPar *elec);

/************************************************************
	功能：傅氏积分三次谐波计算，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluThirdFourier(const LONG *pDataBuf,TRelElecValPar *elec);

/************************************************************
	功能：傅氏积分五次谐波计算，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluFifthFourier(const LONG *pDataBuf,TRelElecValPar *elec);

/************************************************************
	功能：傅氏积分七次谐波计算，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluSeventhFourier(const LONG *pDataBuf,TRelElecValPar *elec);

/************************************************************
	功能：傅氏积分九次谐波计算，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluNinthFourier(const LONG *pDataBuf,TRelElecValPar *elec);

/************************************************************
	功能：傅氏积分十一次谐波计算，除15
	参数：pDataBuf	--	傅里叶数据缓冲区
		  elec		--	待计算电量结构
	返回：无
************************************************************/
void CaluEleventhFourier(const LONG *pDataBuf,TRelElecValPar *elec);

/************************************************************
	功能：已知实部、虚部计算模值
	参数：elec		--	待计算电量结构，需已进行实部虚部计算
	返回：无
************************************************************/
void CaluModValue(TRelElecValPar *elec); 

/************************************************************
	功能：求阻抗的角度
	参数：elec		--	待计算电量结构，需已进行实部虚部计算
	返回：无
************************************************************/
void CaluImpdAngle(TRelElecValPar *pElec,const WORD *pAngleTab); 						

/************************************************************
	功能：角度计算
	参数：elec		--	待计算电量结构，需已进行实部虚部模值计算
		  pAngleTab	--	角度计算查询表基址
	返回：无
************************************************************/
void CaluAngle(TRelElecValPar *elec,const WORD *pAngleTab);				

/************************************************************
	功能：通道滤波
	参数：pDataBuf	--	待滤波通道原始数据缓冲区
	返回：无
************************************************************/
void Filter(LONG pDataBuf[READ_POINT_NUM]);

/************************************************************
	功能：32位迭代开方
	参数：par			--	待开方数
	返回：无
************************************************************/
WORD Evolution32(DWORD  par);

/************************************************************
	功能：64位迭代开方
	参数：par			--	待开方数
	返回：无
************************************************************/
DWORD Evolution64(QWORD  par);

/************************************************************
	功能：均方根值求模值
	参数：DataBuf		--	采样点数据缓冲区
		  Elec		--   引用参数，计算所得模值
	返回：无
************************************************************/
void CaluMSMod(const LONG *DataBuf,LONG &Elec); 

/************************************************************
	功能：冒泡排序
	参数：Buf			--   待排序数据缓冲区
		  BufSize		--   数据缓冲区大小
	返回：无
************************************************************/
void BubbleSort(LONG *Buf,LONG BufSize);		

/************************************************************
	功能：向数据库中写入遥测值---已排序后的中值
	参数：no			--   遥测序号
		  val			--   遥测值
		  BubbleData	--   排序缓冲区
		  OriginalData	--   待排序数据缓冲区
	返回：无
************************************************************/
void WriteAIData(WORD no,LONG val, LONG *BubbleData,LONG *OriginalData); //写遥测值
/************************************************************
	功能：向数据库中写入保护测量值
	参数：RMNo			--   保护测量序号
		  val			--   保护测量值
		  pRM			--   保护测量值地址
	返回：无
************************************************************/
void WriteRMData(LONG *pRM,DWORD RMNo, LONG val); //写遥测值

/************************************************************
	功能：向数据库中写入遥测值---已排序后的中值
	参数：no			--   遥测序号
		  val			--   遥测值
		  BubbleData	--   排序缓冲区
		  OriginalData	--   待排序数据缓冲区
	返回：无
************************************************************/
void WriteAIData(WORD no,LONG val, LONG Drift,LONG *BubbleData,LONG *OriginalData,BOOL haveDrift); //写遥测值


/************************************************************
	功能：原始数据经过冒泡排序后取中间值
	参数：num			--   原始数据个数
		  val			--   值
		  OriginalData	--   待排序数据缓冲区
	返回：无
************************************************************/
LONG GetSortData(LONG val,WORD num,LONG *OriginalData,LONG *BubbleData); 


/************************************************************
	功能：阻抗计算
	参数：Uele		--   电压指针
		  Iele		--   电流指针
		  Zele		--	所得阻抗指针
		  RW50I		--	有流继电器字
	返回：无
************************************************************/
void CaluRX(TRelElecValPar *Uele,TRelElecValPar *Iele,TRelElecValPar *Zele,DWORD RW50I,LONG *Zcoef);

/************************************************************
	功能：简单过量保护
	参数：Relay		--   简单的过欠量参数结构
	返回：无
************************************************************/
void SimpleOverValRelay(TRelSimpGeneOvUnPar *Relay);

/************************************************************
	功能：简单欠量保护
	参数：Relay		--   简单的过欠量参数结构
	返回：无
************************************************************/
void SimpleUnderValRelay(TRelSimpGeneOvUnPar *Relay);

/************************************************************
	功能：作保护动作报告
	参数：RptCategory	--   动作报告的Inf号
		  SerialNum	--	报告序列号，唯一，数据库组织用
		  RptRatioTab	--	故障电量显示一次值，变比表地址
	返回：无
************************************************************/
void MakeActRpt(WORD RptCategory,WORD SerialNum);	

/************************************************************
	功能：作告警报告
	参数：RptCategory	--   告警报告的Inf号
		  RptRatioTab	--	故障电量显示一次值，变比表地址
	返回：无
************************************************************/
void MakeAlarmRpt(WORD RptCategory);	

/************************************************************
	功能：作带故障电量的启动报告
	参数：RptCategory	--   启动报告的Inf号
		  RptSerialNum	--   报告序列号，唯一，数据库组织用
	返回：无
************************************************************/
void MakeStartRpt(WORD RptCategory,WORD RptSerialNum);			

/************************************************************
	功能：通用过量保护
	参数：Relay		--  通用过量保护参数结构
		  dwK35		--  K35计算结果，谐波自适应用
		  RptSerialNum --  报告序列号，唯一，数据库组织报告用
	返回：无
************************************************************/
void GeneralOverValueRelay(TRelGeneOvValPar *Relay);
/************************************************************
	功能：通用过量保护,只置继电器字
	参数：Relay		--  通用过量保护参数结构
		  dwK35		--  K35计算结果，谐波自适应用
		  RptSerialNum --  报告序列号，唯一，数据库组织报告用
	返回：无
************************************************************/
void GeneralOverValueRelay_2(TRelGeneOvValPar *Relay);
/************************************************************
	功能：通用过量保护,判断两个电量
	参数：Relay		--  通用过量保护参数结构
		  dwK35		--  K35计算结果，谐波自适应用
		  RptSerialNum --  报告序列号，唯一，数据库组织报告用
	返回：无
************************************************************/

void GeneralOverValueRelay_3(TRelGeneOvValPar_2 *Relay);

void ResetOverValueRelay_3(TRelGeneOvValPar_2 *Relay ,BOOL resetFlag = FALSE);

/************************************************************
	功能：复位通用过量保护
	参数：Relay		--  通用过量保护参数结构
	返回：无
************************************************************/
void ResetOverValueRelay(TRelGeneOvValPar *Relay,BOOL resetFlag = FALSE);

/************************************************************
	功能：功率方向判断
	参数：Uelec		--  电压
		  Ielec		--  电流	
		  PFRW		--  功率正方向继电器字
		  PRRW		--  功率反方向继电器字
	返回：FALSE		--  正常功率方向判断
		  TRUE		--  带记忆功率方向判断
************************************************************/
BOOL PowerDirCheck(TRelElecValPar *Uelec,TRelElecValPar *Ielec,LONG *Databuf,LONG LineAngle, LONG UPCOEF,WORD PFRW,WORD PRRW,WORD channel,BOOL traceflag);	
/************************************************************
	功能：90°接线的功率方向判断
	参数：Uelec		--  电压
		  Ielec		--  电流	
		  PFRW		--  功率正方向继电器字
		  PRRW		--  功率反方向继电器字
	返回：FALSE		--  正常功率方向判断
		  TRUE		--  带记忆功率方向判断
************************************************************/
BOOL PowerDirCheck_90(TRelElecValPar *Uelec,TRelElecValPar *Ielec,LONG *Databuf,LONG LineAngle, LONG UPCOEF,WORD PFRW,WORD PRRW,WORD channel,BOOL traceflag);	

/************************************************************
	功能：通用欠量保护
	参数：Relay		--  通用欠量保护参数结构
		  RptNum		--  报告序列号，唯一，数据库组织报告用，引用参数，在函数中
		  			     会修改改值，与通用过量保护等不同
	返回：无
************************************************************/
void GeneralUnderValRelay(TRelGeneUnValPar *Relay);

/************************************************************
	功能：复位通用欠量保护
	参数：Relay		--  通用欠量保护参数结构
	返回：无，置相应的继电器字
************************************************************/
void ResetUnderValRelay(TRelGeneUnValPar *Relay,BOOL resetFlag = FALSE);

/************************************************************
	功能：平行四边形判断
	参数：Rel21		--  通用距离保护参数结构
	返回：TRUE		--  当前阻抗点位于四边形内
		  FALSE		--  当前阻抗点位于四边形外
************************************************************/
BOOL Parallelogram(TRel21Par *Rel21);

/************************************************************
	功能：阻抗四边形判断
	参数：Rel21		--  通用距离保护参数结构
	返回：TRUE		--  当前阻抗点位于四边形内
		  FALSE		--  当前阻抗点位于四边形外
************************************************************/
BOOL ImpdQuadrangle(TRel21Par *Rel21);

/************************************************************
	功能：通用距离保护
	参数：Rel21		--  通用距离保护参数结构
	返回：无
************************************************************/
void GeneralRelay21(TRel21Par *Rel21);

/************************************************************
	功能：复位通用距离保护元件
	参数：Rel21		--  通用距离保护参数结构
	返回：无
************************************************************/
void ResetRelay21(TRel21Par *Rel21,BOOL resetFlag = FALSE);

/************************************************************
	功能：PT断线检查--只判一路电压
	参数：Relay		--  PT断线
	返回：无
************************************************************/
void CheckPTBrok_1U(TRelPTBrokPar *Relay);

/************************************************************
	功能：PT断线检查--判两路电压
	参数：Relay		--  PT断线
	返回：无
************************************************************/
void CheckPTBrok_2U(TRelPTBrokPar *Relay);


/************************************************************
	功能：实现反时限过流保护
	参数：Relay		--  反时限过流保护参数结构
	返回：无
************************************************************/
void InverseCurRelay(TRelInverseCurPar *Relay);


/************************************************************
	功能：反时限过流保护电流累加量计算
	参数：Relay		--  反时限过流保护参数结构
	返回：无
************************************************************/
void InverseCurIntegral(TRelInverseCurPar *Relay);


/************************************************************
	功能：复位反时限过流保护元件
	参数：Relay		--  反时限过流保护参数结构
	返回：无
************************************************************/
void ResetInverseCurRel(TRelInverseCurPar *Relay,BOOL resetFlag = FALSE);

/************************************************************
	功能：电流增量保护
	参数：Relay		--  电流增量保护参数结构
	返回：无
************************************************************/
void IncreCurrentRelay(TRel50DIPar *Relay);

/************************************************************
	功能：计算故障启动前后的增量电流
	参数：Relay		--  电流增量保护参数结构
	返回：无
************************************************************/
void CalcInCreCurrent(TRel50DIPar *Relay,LONG *DataBuf,DWORD dwMask);

/************************************************************
	功能：复位增量保护元件
	参数：Relay		--  电流增量保护参数结构
	返回：无
************************************************************/
void ResetR50DI(TRel50DIPar *Relay,BOOL resetFlag = FALSE);

/************************************************************
	功能：重合闸充放电元件 
	参数：Relay		--  重合闸参数结构
	返回：无
************************************************************/
void AutoRCCharge(TRel79Par *Relay);

/************************************************************
	功能：重合闸动作元件 
	参数：Relay		--  重合闸参数结构
	返回：无
************************************************************/
void AutoRCAct(TRel79Par *Relay);	

/************************************************************
	功能：重合闸复位函数
	参数：Relay		--  重合闸参数结构
	返回：无
************************************************************/
void ResetAutoRC(TRel79Par *Relay);

/************************************************************
	功能：变压器热过负荷保护初始化计算子程序
	参数：TThermalOverLoad		--  过负荷保护参数结构
	返回：无
************************************************************/
void InitThermalOverLoad(TThermalOverLoad *Relay);

/************************************************************
	功能：变压器热过负荷保护子程序
	参数：TThermalOverLoad		--  过负荷保护参数结构
	返回：无
************************************************************/
void RelThermalOverLoad(TThermalOverLoad *Relay);
/************************************************************
	功能：逻辑方程处理
	参数：无
	返回：无
************************************************************/
//void LogicProcess(void);
/*********************************************************************************************
 *
 * 功能描述     检查指定序号开出是否出于动作状态
 *
 * 参数说明      - no	: 输入 	开出序号
 *				 
 *
 * 返回代码
 *                TRUE或FALSE
 *
 * 其它说明：          
 *
**********************************************************************************************/

BOOL isBoBusy(BYTE no);
/*********************************************************************************************
 *
 * 功能描述 	开出击穿自检，每次处理一路
 *
 * 参数说明 	 无
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/

void BoBreakCheck();
/*********************************************************************************************
 *
 * 功能描述 	开出失效自检，每次处理一路
 *
 * 参数说明 	 无
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/

void BoInvalidCheck();

/*********************************************************************************************
 *
 * 功能描述 	保护元件结构体累加校验和计算
 *
 * 参数说明 	 无
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/

void StructACCCheck(TStructCheck *structcheck,WORD num);

/*********************************************************************************************
 *
 * 功能描述 	保护定值、压板、配置、辅助定值、系数、变比自检
 *
 * 参数说明 	 无
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/

void RelayCheck();

/*********************************************************************************************
 *
 * 功能描述 	比率差动保护元件
 *
 * 参数说明 	 比率差动保护参数结构
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/
void Rel87RI(TRel87R *Relay);
/*********************************************************************************************
 *
 * 功能描述 	复位比率差动保护元件
 *
 * 参数说明 	 比率差动保护参数结构
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/
void Reset87RI(TRel87R *Relay,BOOL resetFlag = FALSE);
/*********************************************************************************************
 *
 * 功能描述 	差流越限告警处理
 *
 * 参数说明 	 差流越限告警元件
 *				 
 *
 * 返回代码
 *				  无
 *
 * 其它说明：		   
 *
**********************************************************************************************/
void R87IAlarm(T87IAlarm *Relay);
/*********************************************************************************************
 *
 * 功能描述     捕捉一周波两端过零点附近的各三个采样点，利用拉格朗日二次插值算法分别计算
                此两个过零点的逼近值，利用其时间差计算被测电量的频率
 *				
 * 参数说明    - Fpre :      输入 前次采样频率
			   - TestElec :  输入 被测电量
			   - TFMask:     输入 测频电量数据掩码		 
			   - dwTestFBuf: 输入 测频缓冲区
			   - Fnow:       输出 本次测频值
			   - ts:         输出 本次采样周期

 * 返回代码      无
**********************************************************************************************/

BOOL TestFrequence(DWORD Fpre,LONG TestElec,DWORD TFMask,SHORT *wTestFBuf,LONG *dwCaluBuf,LONG *Fnow,BOOL trace);

/*********************************************************************************************
 *
 * 功能描述     捕捉一周波两端过零点附近的各三个采样点，利用拉格朗日二次插值算法分别计算
                此两个过零点的逼近值，利用其时间差计算被测电量的频率
 *				
 * 参数说明    - Fpre :      输入 前次采样频率
			   - TestElec :  输入 被测电量
			   - TFMask:     输入 测频电量数据掩码		 
			   - dwTestFBuf: 输入 测频缓冲区
			   - Fnow:       输出 本次测频值
			   - ts:         输出 本次采样周期

 * 返回代码      无
**********************************************************************************************/

BOOL CalcImmeFrequence(DWORD ADDataWritePtr,LONG TestElec,DWORD TFMask,SHORT *wTestFBuf,LONG *dwCaluBuf,LONG *Fnow);

/************************************************************
	功能：设置调试继电器的值
	参数：
	     WORD wIndex[in] 要写的继电器的序号，
	     
	     BYTE byVal[in] 值
************************************************************/
//void WriteDebugRW(WORD wIndex,BYTE byVal);

/************************************************************
	功能：读继电器全值
	参数：
	     WORD wIndex[in] 要读的继电器的序号，
	     
	返回:    BYTE  继电器值
************************************************************/
//BYTE ReadRWFullValue(WORD wIndex);



BOOL Relay_GetBOBRStatus(BYTE *pStatus);
BOOL Relay_GetBOINStatus(BYTE *pStatus);

BOOL GetMaintSWStatus();
/************************************************************************************************
*功能: 模拟指定序号的报告
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void SimActionReport(WORD no);

/************************************************************************************************
*功能: 傅里叶分析计算电量基波，适用于20点采样的测距装置
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void CaluBaseFourier_20(const LONG *pDataBuf,TRelElecValPar *elec);
/************************************************************************************************
*功能: 傅里叶分析计算电量二次谐波，适用于20点采样的测距装置
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void CaluSecondFourier_20(const LONG *pDataBuf,TRelElecValPar *elec);
/************************************************************************************************
*功能: 傅里叶分析计算电量三次谐波，适用于20点采样的测距装置
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void CaluThirdFourier_20(const LONG *pDataBuf,TRelElecValPar *elec);
/************************************************************************************************
*功能: 傅里叶分析计算电量五次谐波，适用于20点采样的测距装置
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void CaluFifthFourier_20(const LONG *pDataBuf,TRelElecValPar *elec);
/************************************************************************************************
*功能: 作一个不带启动的动作报告
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void MakeActRptWithoutStart(DWORD inf);
/************************************************************************************************
*功能: 做保护入段动作报告
*参数: 报告序号
*返回: 无
*备注: 
*************************************************************************************************/
void MakePickupRpt(WORD RptCategory, WORD RptSerialNum);
/************************************************************************************************
*功能: CT断线检查及复归函数
*参数: 
*返回: 
*备注: 
*************************************************************************************************/
void CTCheck(TRelCTBrokPar *Relay);
void ResetCTCheck(TRelCTBrokPar * Relay);
//两路模拟量相位判断
//若同相则返回TRUE,否则返回FALSE
BOOL PhaseCheck(const LONG *A1Buf,const LONG *A2Buf);
/************************************************************************************************
*功能: 刷新通信状态继电器字
*参数: 
*返回: 
*备注: 
*************************************************************************************************/

void RefreshCommRW(WORD ETHRW,WORD COMRW,WORD CANRW,WORD MAINRW);		
void WriteCommRW(WORD i,WORD wPortID,WORD RelayWord, WORD RunningFlag);


#endif
///:~
