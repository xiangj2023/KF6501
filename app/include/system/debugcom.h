#ifndef __DEBUGCOM_H__
#define __DEBUGCOM_H__
 
#include "system.h"

#define     MAX_COMM_PROMPT         4096    
#define 	DEBUG_PORT				(0xefefefef)

/*----------------------------------------------------------------------------------------*/
/* 端口通信调试缓冲区定义,系统同时只能调试一个端口,每个端口的通信信息以ASCII码方式存储    */
/*----------------------------------------------------------------------------------------*/
struct TCommBlock{
    WORD        nWriteIndex;            //写计数指针
    WORD        nReadIndex;             //读计数指针
    WORD        nSize;                  //缓冲区大小
    DWORD       hSem;                   //信号量ID
    DWORD       hPort;                  //当前的调试端口,DEBUG_PORT为特殊的调试口,在该端口调试
                                        //时,系统不阻塞调用任务
    char*       szPrompt;               //调式缓冲区指针
};
 
/*------------------------------------------------------------------------------------------*/
/* 功能:把缓冲区数据转化为ASCII方式输出到调试台,该函数调用主要提供给规约任务使用,例规约任务 */
/*      可以在接收到一帧数据时用DisplayCommBuf(port,"Rxd",rxdbuf,rxdlen,"CRC OK"),在发送一帧*/
/*      用DisplayCommBuf(port,"Rxd",txdbuf,txdlen,"YC")方式显示通信收发过程                 */
/* 输入:port 当前规约管理的端口号;head 前导字符串;buf 显示数据的指针;len 显示数据长度; tail */
/*      后缀字符串,可填写自己要方便调试的任意字符串                                         */
/* 输出:无                                                                                  */
/* 返回:ERR_SUCCESS 调用成功,其它调用失败                                                   */
/*------------------------------------------------------------------------------------------*/
DWORD DisplayCommBuf(DWORD port,void* head,BYTE *pbuf=NULL,WORD len=0,void *tail=NULL);

/*------------------------------------------------------------------------------------------*/
/* 功能:读调试信息缓冲区                                                                    */
/* 输入:buf 存放数据指针;len 请求读的长度                                                   */
/* 输出:buf 调式信息数据                                                                    */
/* 返回:读到的实际长度                                                                      */
/*------------------------------------------------------------------------------------------*/
DWORD ReadPrompt(char *buf,DWORD len);

/*------------------------------------------------------------------------------------------*/
/* 功能:向调试台写入调试字符串                                                              */
/* 输入:buf 写入的调试字符串指针,字符串以'\0'字符结尾                                       */
/* 输出:无                                                                                  */
/* 返回:无                                                                                  */
/*------------------------------------------------------------------------------------------*/
void WritePrompt(char *buf);

/*------------------------------------------------------------------------------------------*/
/* 功能:设置当前的调试端口,系统只允许同时只有一个调试端口,调试台只接受当前处于调试端口的信息*/
/* 输入:portid 当前的调试端口                                                               */
/* 输出:无                                                                                  */
/* 返回:无                                                                                  */
/*------------------------------------------------------------------------------------------*/
void SetDebugComm(DWORD portid);

/*------------------------------------------------------------------------------------------*/
/* 功能:取消所有端口的调试模式                                                              */
/* 输入:无                                                                                  */
/* 输出:无                                                                                  */
/* 返回:无                                                                                  */
/*------------------------------------------------------------------------------------------*/
void CancelDebufComm();

/*------------------------------------------------------------------------------------------*/
/* 功能:初始化调试控制台,该函数只在系统初始化期间调用                                       */
/* 输入:无                                                                                  */
/* 输出:无                                                                                  */
/* 返回:无                                                                                  */
/*------------------------------------------------------------------------------------------*/
void InitDebugInfo();

#endif
